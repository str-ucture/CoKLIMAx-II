{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Alpine monatliche Niederschlagsdaten\n",
    "\n",
    "Alpine monthly precipitation data since 1871, derived from stationary observations: The LAPrec (Long-term Alpine Precipitation Reconstruction) dataset provides monthly precipitation data for the Alpine region and is based on stationary observations. There are two versions:\n",
    "\n",
    "* LAPrec1871 (from 1871, 85 input series)\n",
    "* LAPrec1901 (from 1901, 165 input series)\n",
    "\n",
    "The dataset meets high climatic standards and is a valuable basis for historical climate analyses in the Alps, a region strongly affected by climate change. It combines the data sources HISTALP (homogenized stationary precipitation data) and APGD (daily gridded data from 1971â€“2008) and uses the Reduced Space Optimal Interpolation (RSOI) method. LAPrec is updated every two years and was developed as part of the Copernicus Climate Change Service in cooperation with the weather services of Switzerland (MeteoSwiss) and Austria (ZAMG).\n",
    "\n",
    "**Information on Dataset:**\n",
    "* Source: <a href=\"https://cds.climate.copernicus.eu/datasets/insitu-gridded-observations-alpine-precipitation?tab=overview\" target=\"_blank\">Alpine Monthly Precipitation</a>\n",
    "* Author: T. Tewes (City of Konstanz)\n",
    "* Notebook Version: 1.1 (Updated: December 05, 2024)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Specifying the paths and working directories"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "\n",
    "''' ---- Specify Directories Here ---- '''\n",
    "download_folder = r\".\\data\\alpine-monthly-precipitation\\download\"\n",
    "working_folder = r\".\\data\\alpine-monthly-precipitation\\working\"\n",
    "geotiff_folder = r\".\\data\\alpine-monthly-precipitation\\geotiff\"\n",
    "csv_folder = r\".\\data\\alpine-monthly-precipitation\\csv\"\n",
    "output_folder = r\".\\data\\alpine-monthly-precipitation\\output\"\n",
    "''' ----- End of Declaration ---- '''\n",
    "\n",
    "os.makedirs(download_folder, exist_ok=True)\n",
    "os.makedirs(working_folder, exist_ok=True)\n",
    "os.makedirs(geotiff_folder, exist_ok=True)\n",
    "os.makedirs(csv_folder, exist_ok=True)\n",
    "os.makedirs(output_folder, exist_ok=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Download and Extract the Dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.1 Authentication"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "import cdsapi\n",
    "\n",
    "def main():\n",
    "    # API key for authentication\n",
    "    api_key = \"fdae60fd-35d4-436f-825c-c63fedab94a4\"\n",
    "    api_url = \"https://cds.climate.copernicus.eu/api\"\n",
    "\n",
    "    # Creation of the CDS API client\n",
    "    client = cdsapi.Client(url=api_url, key=api_key)\n",
    "    return client"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.2 Define the \"request\" and Download the Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Definition of the dataset and the request parameters\n",
    "dataset = \"insitu-gridded-observations-alpine-precipitation\"\n",
    "request = {\n",
    "    \"variable\": \"precipitation\",\n",
    "    \"dataset_issue\": [\n",
    "        \"laprec1871\",\n",
    "        \"laprec1901\"\n",
    "    ],\n",
    "    \"version\": [\"1_2\"],\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset already downloaded.\n"
     ]
    }
   ],
   "source": [
    "# Execute it to download the dataset:\n",
    "def main_retrieve():\n",
    "    dataset_filename = f\"{dataset}.zip\"\n",
    "    dataset_filepath = os.path.join(download_folder, dataset_filename)\n",
    "\n",
    "    # Download the dataset only if the dataset has not been downloaded before\n",
    "    if not os.path.isfile(dataset_filepath):\n",
    "        # Call the CDS client only if the dataset has not been downloaded before\n",
    "        client = main()\n",
    "        # Download the dataset with the defined request parameters\n",
    "        client.retrieve(dataset, request, dataset_filepath)\n",
    "    else:\n",
    "        print(\"Dataset already downloaded.\")\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    main_retrieve()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.3 Extract the ZIP file in folder"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Folder is not empty. Skipping extraction.\n"
     ]
    }
   ],
   "source": [
    "import zipfile\n",
    "\n",
    "# Construct the filename and filepath for the ZIP file based on selected year\n",
    "dataset_filename = f\"{dataset}.zip\"\n",
    "dataset_filepath = os.path.join(download_folder, dataset_filename)\n",
    "\n",
    "# Define a extract folder to ZIP file same as the working folder\n",
    "extract_folder = working_folder\n",
    "\n",
    "# Extract the ZIP file only if the folder is empty\n",
    "try:\n",
    "    os.makedirs(extract_folder, exist_ok=True)\n",
    "    \n",
    "    if not os.listdir(extract_folder):\n",
    "        # Attempt to open and extract the ZIP file\n",
    "        with zipfile.ZipFile(dataset_filepath, 'r') as zip_ref:\n",
    "            zip_ref.extractall(extract_folder)\n",
    "            print(f\"Successfully extracted files to: {extract_folder}\")\n",
    "    else:\n",
    "        print(\"Folder is not empty. Skipping extraction.\")\n",
    "except FileNotFoundError:\n",
    "    print(f\"Error: The file {dataset_filepath} was not found.\")\n",
    "except zipfile.BadZipFile:\n",
    "    print(f\"Error: The file {dataset_filepath} is not a valid zip file.\")\n",
    "except Exception as e:\n",
    "    print(f\"An unexpected error occurred: {e}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Investigate the Metadata of the NetCDF4 file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['LAPrec1871.v1.2.nc', 'LAPrec1901.v1.2.nc']\n"
     ]
    }
   ],
   "source": [
    "# Print list of netCDF4 files inside the working/extracted folder\n",
    "filename_list = os.listdir(extract_folder)\n",
    "print(filename_list)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The <a href=\"https://cds.climate.copernicus.eu/datasets/insitu-gridded-observations-alpine-precipitation?tab=overview\" target=\"_blank\">Alpine Monthly Precipitation</a> dataset provides records starting from either 1871 or 1901. In this notebook, we will use the dataset from 1901 (LAPrec1901)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Available variables: ['X', 'Y', 'time', 'LAPrec1901', 'lon', 'lat', 'dem', 'lambert_azimuthal_equal_area']\n"
     ]
    }
   ],
   "source": [
    "import netCDF4 as nc\n",
    "\n",
    "# Define the file path for the selected NetCDF dataset\n",
    "nc_filename = 'LAPrec1901.v1.2.nc'\n",
    "nc_filepath = os.path.join(extract_folder, 'LAPrec1901.v1.2.nc')\n",
    "\n",
    "# Open the NetCDF file in read mode\n",
    "nc_dataset = nc.Dataset(nc_filepath, mode='r')\n",
    "\n",
    "# List all variables in the dataset\n",
    "variables_list = list(nc_dataset.variables.keys())\n",
    "print(f\"Available variables: {list(variables_list)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Description</th>\n",
       "      <th>Details</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Variable Name</td>\n",
       "      <td>LAPrec1901</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Data Type</td>\n",
       "      <td>int32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Shape</td>\n",
       "      <td>(1440, 138, 219)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Variable Info</td>\n",
       "      <td>('time', 'Y', 'X')</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Units</td>\n",
       "      <td>kg m-2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Long Name</td>\n",
       "      <td>monthly precipitation sum</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Description                    Details\n",
       "0  Variable Name                 LAPrec1901\n",
       "1      Data Type                      int32\n",
       "2          Shape           (1440, 138, 219)\n",
       "3  Variable Info         ('time', 'Y', 'X')\n",
       "4          Units                     kg m-2\n",
       "5      Long Name  monthly precipitation sum"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Define variable name from available variables and read variable data\n",
    "variable_name = 'LAPrec1901'\n",
    "variable_data = nc_dataset[variable_name]\n",
    "\n",
    "# Create a summary of the primary variables\n",
    "summary = {\n",
    "    \"Variable Name\": variable_name,\n",
    "    \"Data Type\": variable_data.dtype,\n",
    "    \"Shape\": variable_data.shape,\n",
    "    \"Variable Info\": f\"{variable_data.dimensions}\",\n",
    "    \"Units\": getattr(variable_data, \"units\", \"N/A\"),\n",
    "    \"Long Name\": getattr(variable_data, \"long_name\", \"N/A\"),\n",
    "}\n",
    "\n",
    "# Display the summary of the data set as a DataFrame for better visualisation\n",
    "nc_summary = pd.DataFrame(list(summary.items()), columns=['Description', 'Details'])\n",
    "\n",
    "# Display the summary DataFrame\n",
    "nc_summary"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>nc_variables</th>\n",
       "      <th>unit</th>\n",
       "      <th>shape</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>X</td>\n",
       "      <td>m</td>\n",
       "      <td>(219,)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Y</td>\n",
       "      <td>m</td>\n",
       "      <td>(138,)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>time</td>\n",
       "      <td>days since 1901-01-01 00:00:00</td>\n",
       "      <td>(1440,)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>LAPrec1901</td>\n",
       "      <td>kg m-2</td>\n",
       "      <td>(1440, 138, 219)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>lon</td>\n",
       "      <td>degrees_east</td>\n",
       "      <td>(138, 219)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>lat</td>\n",
       "      <td>degrees_north</td>\n",
       "      <td>(138, 219)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>dem</td>\n",
       "      <td>m</td>\n",
       "      <td>(138, 219)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>lambert_azimuthal_equal_area</td>\n",
       "      <td>N/A</td>\n",
       "      <td>()</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   nc_variables                            unit  \\\n",
       "0                             X                               m   \n",
       "1                             Y                               m   \n",
       "2                          time  days since 1901-01-01 00:00:00   \n",
       "3                    LAPrec1901                          kg m-2   \n",
       "4                           lon                    degrees_east   \n",
       "5                           lat                   degrees_north   \n",
       "6                           dem                               m   \n",
       "7  lambert_azimuthal_equal_area                             N/A   \n",
       "\n",
       "              shape  \n",
       "0            (219,)  \n",
       "1            (138,)  \n",
       "2           (1440,)  \n",
       "3  (1440, 138, 219)  \n",
       "4        (138, 219)  \n",
       "5        (138, 219)  \n",
       "6        (138, 219)  \n",
       "7                ()  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Print a summary of all the variables of the dataset\n",
    "rows = []\n",
    "for variable in variables_list:\n",
    "    try:\n",
    "        var_obj = nc_dataset.variables[variable]\n",
    "        unit = getattr(var_obj, 'units', 'N/A')\n",
    "        shape = var_obj.shape\n",
    "        rows.append({\n",
    "            \"nc_variables\": variable,\n",
    "            \"unit\": unit,\n",
    "            \"shape\": shape\n",
    "        })\n",
    "    except Exception as e:\n",
    "        print(f\"Error processing variable {variable}: {e}\")\n",
    "\n",
    "# Create a DataFrame\n",
    "df = pd.DataFrame(rows)\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 5. Export the dataset in CSV Format"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.1 Define Bounding Box to Filter Data for Konstanz"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define additional request fields to ensure the request stays within the file size limit.\n",
    "# These coordinates were obtained using the BBox Extractor tool:\n",
    "# https://str-ucture.github.io/bbox-extractor/\n",
    "\n",
    "# Bounding box for the Konstanz region (WGS84 projection):\n",
    "bbox_wgs84_konstanz = [47.9, 8.9, 47.6, 9.3]  # Format: [North, West, South, East]\n",
    "bbox_wgs84_konstanz_standard = [9.0, 47.6, 9.3, 47.8]  # Standard format: [West, South, East, North]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bounding Box in LAEA: [4252254.817823338, 2727132.614227563, 4262344.998739288, 2739095.48723691]\n"
     ]
    }
   ],
   "source": [
    "# Alternatively, use a shapefile for precise geographic filtering\n",
    "import geopandas as gpd\n",
    "import matplotlib.pyplot as plt\n",
    "from pyproj import Transformer\n",
    "\n",
    "# Load the shapefile of Konstanz (WGS84 projection) for geographic boundary filtering\n",
    "shapefile = r\"./shapefiles/kn_boundary.shp\"\n",
    "gdf = gpd.read_file(shapefile)\n",
    "\n",
    "# Extract the bounding box of the shapefile\n",
    "shapefile_epsg = gdf.crs.to_epsg()\n",
    "shapefile_bounds = gdf.total_bounds\n",
    "\n",
    "# Define the source and target projections\n",
    "proj_shapefile = f\"epsg:{shapefile_epsg}\"  # Source projection (shapefile's CRS)\n",
    "proj_laea = \"epsg:3035\"  # Target projection (LAEA for Europe)\n",
    "\n",
    "# Define a transformer to convert coordinates from source to target projection\n",
    "transformer = Transformer.from_crs(proj_shapefile, proj_laea, always_xy=True)\n",
    "\n",
    "# Transform the bounding box coordinates to the target projection (LAEA)\n",
    "x_min, y_min = transformer.transform(shapefile_bounds[0], shapefile_bounds[1])  # Bottom-left corner\n",
    "x_max, y_max = transformer.transform(shapefile_bounds[2], shapefile_bounds[3])  # Top-right corner\n",
    "shapefile_bounds_laea = [x_min, y_min, x_max, y_max]  # Bounding box in LAEA projection\n",
    "\n",
    "# Display the transformed bounding box\n",
    "print(\"Bounding Box in LAEA:\", shapefile_bounds_laea)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Coordinate System: EPSG(4326)\n",
      "Bounding Box: [ 9.08545411 47.65398657  9.21804389 47.762681  ]\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "print(f\"Coordinate System: EPSG({shapefile_epsg})\")\n",
    "print(f\"Bounding Box: {shapefile_bounds}\")\n",
    "\n",
    "# Optional: Quick plot of your Shapefile\n",
    "gdf.plot()\n",
    "plt.title(\"Shapefile Representation\")\n",
    "plt.xlabel(\"Longitude / X\")\n",
    "plt.ylabel(\"Latitude / Y\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "> Important: Generally, **kn_bounds_laea** is sufficient for extracting CSV and GeoTIFF, but adjustments may be needed because:\n",
    "* **x** and **y** represent grid cell centers, and bounding box edges may not align perfectly with these centers.\n",
    "* Without adjustment, grid cells near the edges might be excluded if bounding box edges fall between grid centers.\n",
    "* Adjusting ensures all relevant grid cells are included.\n",
    "\n",
    "<div style=\"display: flex; justify-content: center; gap: 10px;\">\n",
    "  <figure style=\"margin: 0;\">\n",
    "    <img src=\"./images/ppt_normal.png\" width=\"400\" style=\"border: 1px solid #aeaeae; display: block;\">\n",
    "    <figcaption style=\"text-align: center; margin-top: 5px;\">Extent w/o bbox adjustment (kn_bounds_laea)</figcaption>\n",
    "  </figure>\n",
    "  <figure style=\"margin: 0;\">\n",
    "    <img src=\"./images/ppt_adjusted.png\" width=\"400\" style=\"border: 1px solid #aeaeae; display: block;\">\n",
    "    <figcaption style=\"text-align: center; margin-top: 5px;\">Extent w/ bbox adjustment (kn_bounds_laea_adjusted)</figcaption>\n",
    "  </figure>\n",
    "</div>\n",
    "\n",
    "It is recommended to use **kn_bounds_laea_adjusted** for extracting GeoTIFF files."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define variable name from available variables and read variable data\n",
    "variable_name = 'LAPrec1901'\n",
    "variable_data = nc_dataset[variable_name]\n",
    "\n",
    "x = nc_dataset['X'][:]\n",
    "y = nc_dataset['Y'][:]\n",
    "\n",
    "# Validate bounding box dimensions\n",
    "dx = x[1] - x[0]  # X-axis resolution\n",
    "dy = y[1] - y[0]  # Y-axis resolution\n",
    "\n",
    "# Adjust the bounding box to align with grid edges\n",
    "x_min_adjusted = max(x_min - dx / 2, x.min())\n",
    "x_max_adjusted = min(x_max + dx / 2, x.max())\n",
    "y_min_adjusted = max(y_min - dy / 2, y.min())\n",
    "y_max_adjusted = min(y_max + dy / 2, y.max())\n",
    "\n",
    "shp_bounds_laea_adjusted = [x_min_adjusted, y_min_adjusted, x_max_adjusted, y_max_adjusted]\n",
    "# print(shp_bounds_laea_adjusted)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.2 Filter Data by Bounding Box and Export as CSV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "import xarray as xr\n",
    "\n",
    "# Function for converting NetCDF data into a Pandas DataFrame\n",
    "def netcdf_to_dataframe(nc_filepath, bounding_box=None):\n",
    "\n",
    "    with xr.open_dataset(nc_filepath) as nc_dataset:\n",
    "        # Access the variable data from the datase\n",
    "        variable_data = nc_dataset[variable_name]\n",
    "\n",
    "        # Filter the data based on the bounding box, if provided\n",
    "        if bounding_box:\n",
    "            filtered_data = variable_data.where(\n",
    "                (nc_dataset['X'] >= bounding_box[0]) & (nc_dataset['X'] <= bounding_box[2]) &\n",
    "                (nc_dataset['Y'] >= bounding_box[1]) & (nc_dataset['Y'] <= bounding_box[3]),\n",
    "                drop=True\n",
    "            )\n",
    "        else:\n",
    "            filtered_data = variable_data\n",
    "\n",
    "        # Convert the xarray dataset to a pandas DataFrame\n",
    "        df = filtered_data.to_dataframe().reset_index().set_index(['time', 'X', 'Y'])\n",
    "\n",
    "        return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "File already exists at .\\data\\alpine-monthly-precipitation\\csv\\LAPrec1901_filtered_data.csv.\n",
      "Skipping export.\n",
      "Reading existing CSV file...\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>LAPrec1901</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>time</th>\n",
       "      <th>Y</th>\n",
       "      <th>X</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">1901-01-01</th>\n",
       "      <th rowspan=\"3\" valign=\"top\">2725000.0</th>\n",
       "      <th>4250000.0</th>\n",
       "      <td>37.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4255000.0</th>\n",
       "      <td>36.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4260000.0</th>\n",
       "      <td>36.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">2730000.0</th>\n",
       "      <th>4250000.0</th>\n",
       "      <td>37.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4255000.0</th>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">2020-12-01</th>\n",
       "      <th rowspan=\"2\" valign=\"top\">2735000.0</th>\n",
       "      <th>4255000.0</th>\n",
       "      <td>57.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4260000.0</th>\n",
       "      <td>56.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">2740000.0</th>\n",
       "      <th>4250000.0</th>\n",
       "      <td>56.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4255000.0</th>\n",
       "      <td>57.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4260000.0</th>\n",
       "      <td>58.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>17280 rows Ã— 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                LAPrec1901\n",
       "time       Y         X                    \n",
       "1901-01-01 2725000.0 4250000.0        37.0\n",
       "                     4255000.0        36.0\n",
       "                     4260000.0        36.0\n",
       "           2730000.0 4250000.0        37.0\n",
       "                     4255000.0        33.0\n",
       "...                                    ...\n",
       "2020-12-01 2735000.0 4255000.0        57.0\n",
       "                     4260000.0        56.0\n",
       "           2740000.0 4250000.0        56.0\n",
       "                     4255000.0        57.0\n",
       "                     4260000.0        58.0\n",
       "\n",
       "[17280 rows x 1 columns]"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Define csv filename and filepath for the output\n",
    "csv_filename = f\"{variable_name}_filtered_data.csv\"\n",
    "csv_filepath = os.path.join(csv_folder, csv_filename)\n",
    "\n",
    "# Export the DataFrame as CSV if it does not already exist\n",
    "if not os.path.isfile(csv_filepath):\n",
    "    dataframe = netcdf_to_dataframe(nc_filepath=nc_filepath, bounding_box=shp_bounds_laea_adjusted)\n",
    "    dataframe.to_csv(csv_filepath, sep=\",\", encoding='utf8')\n",
    "else:\n",
    "    print(f\"File already exists at {csv_filepath}.\\nSkipping export.\")\n",
    "    print(\"Reading existing CSV file...\")\n",
    "    dataframe = pd.read_csv(csv_filepath).set_index(['time', 'Y', 'X'])\n",
    "\n",
    "# Display DataFrame\n",
    "dataframe"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.3 Compute Monthly Means and Export as CSV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "File already exists at .\\data\\alpine-monthly-precipitation\\csv\\LAPrec1901_filtered_data.csv. Skipping export.\n",
      "Reading existing CSV file...\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>12</th>\n",
       "      <th>Yearly_Sum</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Year</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1901</th>\n",
       "      <td>31.17</td>\n",
       "      <td>26.00</td>\n",
       "      <td>65.42</td>\n",
       "      <td>124.58</td>\n",
       "      <td>16.50</td>\n",
       "      <td>129.33</td>\n",
       "      <td>84.33</td>\n",
       "      <td>88.00</td>\n",
       "      <td>88.08</td>\n",
       "      <td>36.17</td>\n",
       "      <td>25.33</td>\n",
       "      <td>44.50</td>\n",
       "      <td>759.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1902</th>\n",
       "      <td>32.00</td>\n",
       "      <td>55.58</td>\n",
       "      <td>53.75</td>\n",
       "      <td>35.92</td>\n",
       "      <td>107.08</td>\n",
       "      <td>72.33</td>\n",
       "      <td>89.25</td>\n",
       "      <td>115.42</td>\n",
       "      <td>78.00</td>\n",
       "      <td>78.92</td>\n",
       "      <td>15.25</td>\n",
       "      <td>79.83</td>\n",
       "      <td>813.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1903</th>\n",
       "      <td>35.00</td>\n",
       "      <td>27.83</td>\n",
       "      <td>37.00</td>\n",
       "      <td>53.17</td>\n",
       "      <td>39.83</td>\n",
       "      <td>88.50</td>\n",
       "      <td>131.33</td>\n",
       "      <td>100.67</td>\n",
       "      <td>45.00</td>\n",
       "      <td>76.00</td>\n",
       "      <td>81.08</td>\n",
       "      <td>16.58</td>\n",
       "      <td>731.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1904</th>\n",
       "      <td>29.17</td>\n",
       "      <td>95.75</td>\n",
       "      <td>36.58</td>\n",
       "      <td>60.75</td>\n",
       "      <td>129.83</td>\n",
       "      <td>78.33</td>\n",
       "      <td>22.17</td>\n",
       "      <td>64.00</td>\n",
       "      <td>98.83</td>\n",
       "      <td>34.25</td>\n",
       "      <td>44.92</td>\n",
       "      <td>40.08</td>\n",
       "      <td>734.66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1905</th>\n",
       "      <td>44.08</td>\n",
       "      <td>24.33</td>\n",
       "      <td>84.17</td>\n",
       "      <td>83.67</td>\n",
       "      <td>75.58</td>\n",
       "      <td>64.33</td>\n",
       "      <td>76.42</td>\n",
       "      <td>178.92</td>\n",
       "      <td>117.50</td>\n",
       "      <td>101.50</td>\n",
       "      <td>47.33</td>\n",
       "      <td>37.58</td>\n",
       "      <td>935.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016</th>\n",
       "      <td>144.00</td>\n",
       "      <td>90.67</td>\n",
       "      <td>32.08</td>\n",
       "      <td>100.50</td>\n",
       "      <td>154.08</td>\n",
       "      <td>153.42</td>\n",
       "      <td>97.17</td>\n",
       "      <td>62.58</td>\n",
       "      <td>48.75</td>\n",
       "      <td>48.25</td>\n",
       "      <td>70.08</td>\n",
       "      <td>1.42</td>\n",
       "      <td>1003.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2017</th>\n",
       "      <td>47.58</td>\n",
       "      <td>50.00</td>\n",
       "      <td>49.08</td>\n",
       "      <td>100.50</td>\n",
       "      <td>79.83</td>\n",
       "      <td>82.67</td>\n",
       "      <td>114.75</td>\n",
       "      <td>109.25</td>\n",
       "      <td>75.17</td>\n",
       "      <td>42.17</td>\n",
       "      <td>84.50</td>\n",
       "      <td>89.00</td>\n",
       "      <td>924.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2018</th>\n",
       "      <td>108.92</td>\n",
       "      <td>41.92</td>\n",
       "      <td>44.33</td>\n",
       "      <td>13.25</td>\n",
       "      <td>84.83</td>\n",
       "      <td>62.08</td>\n",
       "      <td>44.75</td>\n",
       "      <td>69.17</td>\n",
       "      <td>64.75</td>\n",
       "      <td>38.25</td>\n",
       "      <td>13.08</td>\n",
       "      <td>94.92</td>\n",
       "      <td>680.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2019</th>\n",
       "      <td>55.67</td>\n",
       "      <td>35.50</td>\n",
       "      <td>51.50</td>\n",
       "      <td>43.50</td>\n",
       "      <td>140.00</td>\n",
       "      <td>68.00</td>\n",
       "      <td>99.58</td>\n",
       "      <td>117.67</td>\n",
       "      <td>64.33</td>\n",
       "      <td>101.58</td>\n",
       "      <td>43.58</td>\n",
       "      <td>48.25</td>\n",
       "      <td>869.16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020</th>\n",
       "      <td>28.33</td>\n",
       "      <td>110.08</td>\n",
       "      <td>53.50</td>\n",
       "      <td>24.75</td>\n",
       "      <td>63.17</td>\n",
       "      <td>115.33</td>\n",
       "      <td>49.08</td>\n",
       "      <td>150.50</td>\n",
       "      <td>41.25</td>\n",
       "      <td>85.58</td>\n",
       "      <td>21.75</td>\n",
       "      <td>60.92</td>\n",
       "      <td>804.24</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>120 rows Ã— 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           1       2      3       4       5       6       7       8       9  \\\n",
       "Year                                                                          \n",
       "1901   31.17   26.00  65.42  124.58   16.50  129.33   84.33   88.00   88.08   \n",
       "1902   32.00   55.58  53.75   35.92  107.08   72.33   89.25  115.42   78.00   \n",
       "1903   35.00   27.83  37.00   53.17   39.83   88.50  131.33  100.67   45.00   \n",
       "1904   29.17   95.75  36.58   60.75  129.83   78.33   22.17   64.00   98.83   \n",
       "1905   44.08   24.33  84.17   83.67   75.58   64.33   76.42  178.92  117.50   \n",
       "...      ...     ...    ...     ...     ...     ...     ...     ...     ...   \n",
       "2016  144.00   90.67  32.08  100.50  154.08  153.42   97.17   62.58   48.75   \n",
       "2017   47.58   50.00  49.08  100.50   79.83   82.67  114.75  109.25   75.17   \n",
       "2018  108.92   41.92  44.33   13.25   84.83   62.08   44.75   69.17   64.75   \n",
       "2019   55.67   35.50  51.50   43.50  140.00   68.00   99.58  117.67   64.33   \n",
       "2020   28.33  110.08  53.50   24.75   63.17  115.33   49.08  150.50   41.25   \n",
       "\n",
       "          10     11     12  Yearly_Sum  \n",
       "Year                                    \n",
       "1901   36.17  25.33  44.50      759.41  \n",
       "1902   78.92  15.25  79.83      813.33  \n",
       "1903   76.00  81.08  16.58      731.99  \n",
       "1904   34.25  44.92  40.08      734.66  \n",
       "1905  101.50  47.33  37.58      935.41  \n",
       "...      ...    ...    ...         ...  \n",
       "2016   48.25  70.08   1.42     1003.00  \n",
       "2017   42.17  84.50  89.00      924.50  \n",
       "2018   38.25  13.08  94.92      680.25  \n",
       "2019  101.58  43.58  48.25      869.16  \n",
       "2020   85.58  21.75  60.92      804.24  \n",
       "\n",
       "[120 rows x 13 columns]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Define csv filename and filepath for the output\n",
    "csv_filename_monthly_means = f\"{variable_name}_monthly_means.csv\"\n",
    "csv_filepath_monthly_means = os.path.join(csv_folder, csv_filename_monthly_means)\n",
    "\n",
    "# Export the pivot table to CSV if it doesn't already exist\n",
    "if not os.path.isfile(csv_filepath_monthly_means):\n",
    "    # Convert the 'time' column to datetime format\n",
    "    filtered_df_copy = dataframe.copy().reset_index()\n",
    "    filtered_df_copy['time'] = pd.to_datetime(filtered_df_copy['time'])\n",
    "\n",
    "    # Extract year and month from the 'time' column\n",
    "    filtered_df_copy['Year'] = filtered_df_copy['time'].dt.year\n",
    "    filtered_df_copy['Month'] = filtered_df_copy['time'].dt.month\n",
    "\n",
    "    # Group by year and month, calculate the mean for the specified variable\n",
    "    monthly_means = (\n",
    "        filtered_df_copy.groupby(['Year', 'Month'])[variable_name]\n",
    "        .mean()\n",
    "        .reset_index()\n",
    "        .round({variable_name: 2})\n",
    "    )\n",
    "\n",
    "    # Create a pivot table with years as rows and months as columns\n",
    "    df_monthly_means = monthly_means.pivot(index='Year', columns='Month', values=variable_name)\n",
    "\n",
    "    # Ensure all months (1â€“12) are included, and add yearly totals\n",
    "    df_monthly_means = df_monthly_means.reindex(columns=range(1, 13))\n",
    "    df_monthly_means[f\"Yearly_Sum\"] = df_monthly_means.sum(axis=1)\n",
    "    df_monthly_means.to_csv(csv_filepath_monthly_means, index=True)\n",
    "    print(f\"Monthly mean data exported successfully to {csv_filepath}\")\n",
    "else:\n",
    "    print(f\"File already exists at {csv_filepath}. Skipping export.\")\n",
    "    print(\"Reading existing CSV file...\")\n",
    "    df_monthly_means = pd.read_csv(csv_filepath_monthly_means).set_index(['Year'])\n",
    "# Display the pivot table\n",
    "df_monthly_means"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4.4 Plot Monthly Averages for a Defined Date Range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.ticker as ticker\n",
    "\n",
    "def plot_monthly_averages(\n",
    "        start_year=None,\n",
    "        end_year=None):\n",
    "    \n",
    "    \"\"\"\n",
    "    Plots the monthly averages of a variable with error bars for a given time range.\n",
    "\n",
    "    Parameters:\n",
    "        start_year (int): Starting year for the dataset (optional).\n",
    "        end_year (int): Ending year for the dataset (optional).\n",
    "    \"\"\"\n",
    "    # Read filtered dataframe from CSV file\n",
    "    filtered_df = pd.read_csv(csv_filepath)\n",
    "    filtered_df['time'] = pd.to_datetime(filtered_df['time'])\n",
    "\n",
    "    # Determine the time range\n",
    "    min_year = min(filtered_df['time'].dt.year)\n",
    "    max_year = max(filtered_df['time'].dt.year)\n",
    "    \n",
    "    # Adjust the start and end year to match available data\n",
    "    if start_year and end_year:\n",
    "        if start_year < min(filtered_df[\"time\"].dt.year):\n",
    "            print(f\"Provided start year {start_year} is earlier than the dataset range.\")\n",
    "            print(f\"Adjusting start year to {min_year}.\")\n",
    "\n",
    "        if end_year > max(filtered_df[\"time\"].dt.year):\n",
    "            print(f\"Provided end year {end_year} is later than the dataset range.\")\n",
    "            print(f\"Adjusting end year to {max_year}.\")\n",
    "\n",
    "            start_year = max(start_year, min_year)\n",
    "            end_year = min(end_year, max_year)\n",
    "    else:\n",
    "        start_year = min_year\n",
    "        end_year = max_year\n",
    "        \n",
    "    # Filter data for the defined period\n",
    "    df_period = filtered_df[\n",
    "        (filtered_df[\"time\"].dt.year >= start_year)\n",
    "        & (filtered_df[\"time\"].dt.year <= end_year)\n",
    "    ]\n",
    "\n",
    "    # Calculate monthly statistics: mean and standard deviation\n",
    "    monthly_stats = df_period.groupby(df_period['time'].dt.month)[variable_name].agg(['mean', 'std'])\n",
    "\n",
    "    # Create the plot\n",
    "    fig, ax = plt.subplots(figsize=(12, 6), facecolor='#f1f1f1', edgecolor='k')\n",
    "\n",
    "    # Plot the bar diagram with error bars\n",
    "    ax.bar(\n",
    "        monthly_stats.index,\n",
    "        monthly_stats['mean'],\n",
    "        yerr=monthly_stats['std'],\n",
    "        capsize=5,\n",
    "        color='skyblue',\n",
    "        alpha=0.7,\n",
    "        error_kw=dict(ecolor='black', lw=0.75),\n",
    "    )\n",
    "\n",
    "    # Set the Y-axis range dynamically\n",
    "    y_min = max(0, monthly_stats['mean'].min() - monthly_stats['std'].max() - 0.5)\n",
    "    y_min = y_min // 20 * 20\n",
    "    y_max = monthly_stats['mean'].max() + monthly_stats['std'].max() + 0.5\n",
    "    y_max = (y_max + 20) // 20 * 20\n",
    "    ax.set_ylim(y_min, y_max)\n",
    "\n",
    "    # Add gridlines\n",
    "    ax.grid(visible=True, color='#b0b0b0', linestyle='--', linewidth=0.8, alpha=0.6)\n",
    "    ax.yaxis.set_major_formatter(ticker.FormatStrFormatter('%0.2f'))\n",
    "\n",
    "    # Customize plot labels and title\n",
    "    ax.set_xlabel('Month', fontsize=12)\n",
    "    ax.set_ylabel('Average Precipitation (mm)', fontsize=12)\n",
    "    ax.set_title(\n",
    "        f'Average Precipitation per month (Period Jan {start_year} - Dec {end_year})',\n",
    "        fontsize=14,\n",
    "        fontweight='bold'\n",
    "    )\n",
    "\n",
    "    # Customize x-axis with month names\n",
    "    month_labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n",
    "    ax.set_xticks(range(1, 13))\n",
    "    ax.set_xticklabels(month_labels, rotation=0)\n",
    "\n",
    "    # Adjust layout and display the plot\n",
    "    plt.tight_layout()\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Specify the year range to filter and plot monthly average.\n",
    "# If no range is provided, complete dataset will be used.\n",
    "if __name__ == \"__main__\":\n",
    "    plot_monthly_averages()  # Plot using complete dataset\n",
    "    plot_monthly_averages(2000,2020)  # Plot using specified year range"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 5. Export the NetCDF4 files to GeoTIFF"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5.1 Export All-Year Dataset as Individual GeoTIFF Files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Folder is not empty. Skipping export.\n"
     ]
    }
   ],
   "source": [
    "import rasterio\n",
    "from rasterio.transform import from_origin\n",
    "import netCDF4 as nc\n",
    "\n",
    "from tqdm.notebook import tqdm\n",
    "\n",
    "def main_export_geotiff():\n",
    "    # File paths and variable names\n",
    "    nc_filepath = os.path.join(extract_folder, 'LAPrec1871.v1.2.nc')\n",
    "    variable_name = 'LAPrec1871'\n",
    "\n",
    "    # Open the NetCDF dataset and read variable data\n",
    "    nc_dataset = nc.Dataset(nc_filepath, mode='r')\n",
    "    precipitation_data = nc_dataset[variable_name]\n",
    "\n",
    "    # Extract time variable and convert it to readable dates\n",
    "    time_var = nc_dataset.variables['time']\n",
    "    time_units = nc_dataset.variables['time'].units\n",
    "    time_calendar = getattr(time_var, \"calendar\", \"standard\")\n",
    "    cftime = nc.num2date(time_var[:], units=time_units, calendar=time_calendar)\n",
    "\n",
    "    # Compute spatial resolution and raster transformation\n",
    "    x = nc_dataset['X'][:]\n",
    "    y = nc_dataset['Y'][:]\n",
    "    dx = abs(x[1] - x[0])\n",
    "    dy = abs(y[1] - y[0])\n",
    "    transform = from_origin(x.min() - dx / 2, y.min() - dy / 2, dx, -dy)\n",
    "    \n",
    "    # Create folder for individual geotiffs\n",
    "    output_folder = os.path.join(geotiff_folder, \"individual_geotiff\")\n",
    "    os.makedirs(output_folder, exist_ok=True)\n",
    "\n",
    "    if len(os.listdir(output_folder)) == 0:\n",
    "        # Iterate over the time dimension to process each time slice\n",
    "        for year_index in tqdm(range(precipitation_data.shape[0]), desc=\"Exporting individual GeoTIFF files\"):\n",
    "            # Retrieve the date for the current time slice\n",
    "            dt = cftime[year_index]\n",
    "            dt_full = f\"{dt.year:04d}-{dt.month:02d}-{dt.day:02d}\"\n",
    "\n",
    "            # Define the output GeoTIFF file path for individual GeoTIFFs\n",
    "            output_filename = f\"{variable_name}_{dt_full}.tif\"\n",
    "            output_filepath = os.path.join(output_folder, output_filename)\n",
    "\n",
    "            # Export the current time slice as a GeoTIFF\n",
    "            with rasterio.open(\n",
    "                output_filepath,\n",
    "                \"w\",\n",
    "                driver = \"GTiff\",\n",
    "                dtype = str(precipitation_data.dtype),\n",
    "                width = precipitation_data.shape[2],\n",
    "                height = precipitation_data.shape[1],\n",
    "                count = 1,\n",
    "                crs = \"EPSG:3035\",\n",
    "                nodata = -9999,\n",
    "                transform=transform,        \n",
    "            ) as dst:\n",
    "                year_precipitation_data = precipitation_data[year_index,:,:]\n",
    "                dt = cftime[year_index]\n",
    "                \n",
    "                dst.write(year_precipitation_data, 1)\n",
    "                dst.set_band_description(1, f\"{dt.year:04d}-{dt.month:02d}-{dt.day:02d}\")\n",
    "\n",
    "    else:\n",
    "        print(\"Folder is not empty. Skipping export.\")\n",
    "\n",
    "    nc_dataset.close()\n",
    "    \n",
    "if __name__ == \"__main__\":\n",
    "    main_export_geotiff()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5.2 Export Dataset as a Single Merged GeoTIFF File"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Folder is not empty. Skipping export.\n",
      "Folder is not empty. Skipping export.\n"
     ]
    }
   ],
   "source": [
    "def main_export_merged_geotiff(start_year=None,\n",
    "                               end_year=None):\n",
    "    \"\"\"\n",
    "    Export the entire multi-year dataset or a specified range as a single merged GeoTIFF file.\n",
    "\n",
    "    Parameters:\n",
    "        start_year (int): Starting year for the dataset (optional).\n",
    "        end_year (int): Ending year for the dataset (optional).\n",
    "    \"\"\"\n",
    "    # File paths and variable names\n",
    "    nc_filepath = os.path.join(extract_folder, 'LAPrec1871.v1.2.nc')\n",
    "    variable_name = 'LAPrec1871'\n",
    "\n",
    "    # Open the NetCDF dataset and read variable data\n",
    "    nc_dataset = nc.Dataset(nc_filepath, mode='r')\n",
    "\n",
    "    # Extract time variable and convert it to readable dates\n",
    "    time_var = nc_dataset.variables['time']\n",
    "    time_units = nc_dataset.variables['time'].units\n",
    "    time_calendar = getattr(time_var, \"calendar\", \"standard\")\n",
    "    cftime = nc.num2date(time_var[:], units=time_units, calendar=time_calendar)\n",
    "    \n",
    "    # Compute spatial resolution and raster transformation\n",
    "    x = nc_dataset['X'][:]\n",
    "    y = nc_dataset['Y'][:]\n",
    "    dx = abs(x[1] - x[0])\n",
    "    dy = abs(y[1] - y[0])\n",
    "    transform = from_origin(x.min() - dx / 2, y.min() - dy / 2, dx, -dy)\n",
    "\n",
    "    # Determine the time range\n",
    "    min_year = cftime[0].year\n",
    "    max_year = cftime[-1].year\n",
    "\n",
    "    if start_year and end_year:\n",
    "        # Adjust start_year and end_year based on the available cftime range\n",
    "        if start_year < min_year:\n",
    "            print(f\"Provided start year {start_year} is earlier than the dataset range. Adjusting start year to {min_year}.\")\n",
    "        if end_year > max_year:\n",
    "            print(f\"Provided end year {end_year} is later than the dataset range. Adjusting end year to {max_year}.\")\n",
    "        start_year = max(start_year, min_year)\n",
    "        end_year = min(end_year, max_year)\n",
    "\n",
    "        dt_full_start = start_year\n",
    "        dt_full_end = end_year\n",
    "    else:\n",
    "        # Default to the full dataset\n",
    "        dt_full_start = min_year\n",
    "        dt_full_end = max_year\n",
    "        start_year = min_year\n",
    "        end_year = max_year\n",
    "\n",
    "    # Find indices corresponding to the specified year range\n",
    "    start_index = next(i for i, dt in enumerate(cftime) if dt.year == start_year)\n",
    "    end_index = next(i for i, dt in enumerate(cftime) if dt.year == end_year) + 12 # Months\n",
    "    \n",
    "    # Extract precipitation data for the specified data (year) range\n",
    "    precipitation_data = nc_dataset[variable_name]\n",
    "    precipitation_data_subset = precipitation_data[start_index:end_index, :, :]\n",
    "        \n",
    "    # Create folder for merged geotiff\n",
    "    output_filename = f\"{variable_name}_merged_{dt_full_start}-{dt_full_end}.tif\"\n",
    "    output_folder = os.path.join(geotiff_folder, \"merged_geotiff\")\n",
    "    os.makedirs(output_folder, exist_ok=True)\n",
    "    output_filepath = os.path.join(output_folder, output_filename)\n",
    "    \n",
    "    if not os.path.isfile(output_filepath):\n",
    "        # Retrieve the date for the current time slice\n",
    "        with rasterio.open(\n",
    "            output_filepath,\n",
    "            \"w\",\n",
    "            driver = \"GTiff\",\n",
    "            dtype = str(precipitation_data_subset.dtype),\n",
    "            width = precipitation_data_subset.shape[2],\n",
    "            height = precipitation_data_subset.shape[1],\n",
    "            count = precipitation_data_subset.shape[0],\n",
    "            crs = \"EPSG:3035\",\n",
    "            nodata = -9999,\n",
    "            transform=transform,        \n",
    "        ) as dst:\n",
    "            for year_index in tqdm(range(precipitation_data_subset.shape[0]), desc=f\"Exporting merged GeoTIFF file from {start_year} to {end_year}\"):\n",
    "                band_data = precipitation_data_subset[year_index,:,:]\n",
    "                dt = cftime[start_index + year_index]\n",
    "                band_desc = f\"{dt.year:04d}-{dt.month:02d}-{dt.day:02d}\"\n",
    "                \n",
    "                # Write each year slice as a band\n",
    "                dst.write(band_data, year_index + 1)\n",
    "                dst.set_band_description(year_index + 1, band_desc)\n",
    "    else:\n",
    "        print(\"Folder is not empty. Skipping export.\")\n",
    "\n",
    "# Specify the year range to filter and combine data into a single GeoTIFF.\n",
    "# If no range is provided, the full dataset will be used.\n",
    "if __name__ == \"__main__\":\n",
    "    main_export_merged_geotiff() # Export all the available data set\n",
    "    main_export_merged_geotiff(2000,2020) # Export dataset defined by date (year) range"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5.3 Export Data for a Defined Date Range and Area"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from rasterio.transform import from_origin\n",
    "import rasterio\n",
    "\n",
    "from tqdm.notebook import tqdm\n",
    "\n",
    "def main_export_filtered_geotiff(\n",
    "    bounding_box=None,\n",
    "    start_year=None,\n",
    "    end_year=None,\n",
    "    merged=None):\n",
    "    \"\"\"\n",
    "    Export the entire multi-year dataset or a specified range as a single merged GeoTIFF file.\n",
    "\n",
    "    Parameters:\n",
    "        bounding_box (list): [lon_min, lat_min, lon_max, lat_max] (optional).\n",
    "        start_year (int): Starting year for the dataset (optional).\n",
    "        end_year (int): Ending year for the dataset (optional).\n",
    "        merged (bool): Whether to generate merged geotiff or individual geotiffs (optional).\n",
    "    \"\"\"\n",
    "    # File paths and variable names\n",
    "    nc_filepath = os.path.join(extract_folder, 'LAPrec1871.v1.2.nc')\n",
    "    variable_name = 'LAPrec1871'\n",
    "\n",
    "    # Open the NetCDF dataset\n",
    "    nc_dataset = nc.Dataset(nc_filepath, mode='r')\n",
    "    \n",
    "    # Read x and y coordinate data\n",
    "    x = nc_dataset['X'][:]\n",
    "    y = nc_dataset['Y'][:]\n",
    "\n",
    "    # Apply geographic filtering using the defined bounding box\n",
    "    if bounding_box:\n",
    "        indices_x = np.where((x >= bounding_box[0]) & (x <= bounding_box[2]))[0]\n",
    "        indices_y = np.where((y >= bounding_box[1]) & (y <= bounding_box[3]))[0]\n",
    "        start_x, end_x = indices_x[0], indices_x[-1] + 1\n",
    "        start_y, end_y = indices_y[0], indices_y[-1] + 1\n",
    "    else:\n",
    "        start_x, end_x = 0, len(x)\n",
    "        start_y, end_y = 0, len(y)\n",
    "    \n",
    "    x = x[start_x:end_x]\n",
    "    y = y[start_y:end_y]\n",
    "\n",
    "    # Extract time variable and convert it to readable dates\n",
    "    time_var = nc_dataset.variables['time']\n",
    "    time_units = nc_dataset.variables['time'].units\n",
    "    time_calendar = getattr(time_var, \"calendar\", \"standard\")\n",
    "    cftime = nc.num2date(time_var[:], units=time_units, calendar=time_calendar)\n",
    "    \n",
    "    # Compute spatial resolution and raster transformation\n",
    "    dx = abs(x[1] - x[0])\n",
    "    dy = abs(y[1] - y[0])\n",
    "    transform = from_origin(x.min() - dx / 2, y.min() - dy / 2, dx, -dy)\n",
    "\n",
    "    # Determine the time range\n",
    "    min_year = cftime[0].year\n",
    "    max_year = cftime[-1].year\n",
    "\n",
    "    if start_year and end_year:\n",
    "        # Adjust start_year and end_year based on the available cftime range\n",
    "        if start_year < min_year:\n",
    "            print(f\"Provided start year {start_year} is earlier than the dataset range. Adjusting start year to {min_year}.\")\n",
    "        if end_year > max_year:\n",
    "            print(f\"Provided end year {end_year} is later than the dataset range. Adjusting end year to {max_year}.\")\n",
    "        start_year = max(start_year, min_year)\n",
    "        end_year = min(end_year, max_year)\n",
    "\n",
    "        dt_full_start = start_year\n",
    "        dt_full_end = end_year\n",
    "    else:\n",
    "        # Default to the full dataset\n",
    "        dt_full_start = min_year\n",
    "        dt_full_end = max_year\n",
    "        start_year = min_year\n",
    "        end_year = max_year\n",
    "\n",
    "    # Find indices corresponding to the specified year range\n",
    "    start_index = next(i for i, dt in enumerate(cftime) if dt.year == start_year)\n",
    "    end_index = next(i for i, dt in enumerate(cftime) if dt.year == end_year) + 12 # Months\n",
    "     \n",
    "    # Extract precipitation data for the specified data (year) range\n",
    "    precipitation_data = nc_dataset[variable_name]\n",
    "    precipitation_data_subset = precipitation_data[start_index:end_index,\n",
    "                                                   start_y:end_y,\n",
    "                                                   start_x:end_x]\n",
    "    \n",
    "    if merged:\n",
    "        # Create a merged GeoTIFF containing all time slices as separate bands\n",
    "        output_filename = f\"{variable_name}_merged_{dt_full_start}-{dt_full_end}.tif\"\n",
    "        output_folder = os.path.join(geotiff_folder, \"filtered_and_merged_geotiff\")\n",
    "        os.makedirs(output_folder, exist_ok=True)\n",
    "        output_filepath = os.path.join(output_folder, output_filename)\n",
    "        \n",
    "        # Create a GeoTIFF with multiple bands for each time slice\n",
    "        with rasterio.open(\n",
    "            output_filepath,\n",
    "            \"w\",\n",
    "            driver = \"GTiff\",\n",
    "            dtype = str(precipitation_data_subset.dtype),\n",
    "            width = precipitation_data_subset.shape[2],\n",
    "            height = precipitation_data_subset.shape[1],\n",
    "            count = precipitation_data_subset.shape[0],\n",
    "            crs = \"EPSG:3035\",\n",
    "            nodata = -9999,\n",
    "            transform=transform,        \n",
    "        ) as dst:\n",
    "            for year_index in tqdm(range(precipitation_data_subset.shape[0]), desc=f\"Exporting merged GeoTIFF file from {start_year} to {end_year}\"):\n",
    "                band_data = precipitation_data_subset[year_index,:,:]\n",
    "                dt = cftime[start_index + year_index]\n",
    "                band_desc = f\"{dt.year:04d}-{dt.month:02d}-{dt.day:02d}\"\n",
    "                \n",
    "                # Write each year slice as a band\n",
    "                dst.write(band_data, year_index + 1)\n",
    "                dst.set_band_description(year_index + 1, band_desc)\n",
    "    else:\n",
    "        # Create individual GeoTIFFs for each time slice\n",
    "        output_folder = os.path.join(geotiff_folder, \"filtered_and_individual_geotiff\")\n",
    "        os.makedirs(output_folder, exist_ok=True)\n",
    "\n",
    "        for year_index in tqdm(range(precipitation_data_subset.shape[0]), desc=\"Exporting individual GeoTIFF files\"):\n",
    "            # Retrieve the date for the current time slice\n",
    "            dt = cftime[start_index + year_index]\n",
    "            dt_full = f\"{dt.year:04d}-{dt.month:02d}-{dt.day:02d}\"\n",
    "\n",
    "            # Define the output GeoTIFF file path\n",
    "            output_filename = f\"{variable_name}_{dt_full}.tif\"\n",
    "            output_filepath = os.path.join(output_folder, output_filename)\n",
    "\n",
    "            # Export the current time slice as a GeoTIFF\n",
    "            with rasterio.open(\n",
    "                output_filepath,\n",
    "                \"w\",\n",
    "                driver=\"GTiff\",\n",
    "                dtype=str(precipitation_data_subset.dtype),\n",
    "                width=precipitation_data_subset.shape[2],\n",
    "                height=precipitation_data_subset.shape[1],\n",
    "                count=1,\n",
    "                crs=\"EPSG:3035\",\n",
    "                nodata=-9999,\n",
    "                transform=transform,\n",
    "            ) as dst:\n",
    "                year_precipitation_data = precipitation_data_subset[year_index, :, :]\n",
    "                dst.write(year_precipitation_data, 1)\n",
    "                dst.set_band_description(1, f\"{dt.year:04d}-{dt.month:02d}-{dt.day:02d}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 6. Plot using Matplotlib"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 6.1 Plot the Complete data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Plot saved to: .\\data\\alpine-monthly-precipitation\\output\\temp_images_folder\\2020-08.png\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x800 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import cartopy.feature as cfeature\n",
    "import cartopy.crs as ccrs\n",
    "import numpy as np\n",
    "import geopandas as gpd\n",
    "\n",
    "def main_plt_plot(selected_year,\n",
    "                  selected_month,\n",
    "                  save):\n",
    "    \n",
    "    \"\"\"\n",
    "    Plots monthly precipitation data for a given year and month.\n",
    "\n",
    "    Parameters:\n",
    "        selected_year (str): The year to plot (e.g., '2020').\n",
    "        selected_month (str): The month to plot (e.g., '08').\n",
    "        save (bool): Whether to save the plot as a PNG file.\n",
    "    \"\"\"\n",
    "    \n",
    "    # File paths and variable names\n",
    "    nc_filepath = os.path.join(extract_folder, 'LAPrec1871.v1.2.nc')\n",
    "    variable_name = 'LAPrec1871'\n",
    "    \n",
    "    # Open the NetCDF dataset\n",
    "    nc_dataset = nc.Dataset(nc_filepath, mode='r')\n",
    "    lon = nc_dataset['lon'][:]\n",
    "    lat = nc_dataset['lat'][:]\n",
    "\n",
    "    # Extract time variable and convert it to readable dates\n",
    "    time_var = nc_dataset.variables['time']\n",
    "    time_units = nc_dataset.variables['time'].units\n",
    "    time_calendar = getattr(time_var, \"calendar\", \"standard\")\n",
    "    cftime = nc.num2date(time_var[:], units=time_units, calendar=time_calendar)\n",
    "\n",
    "    # Extract data for selected date\n",
    "    selected_date = f\"{selected_year}-{selected_month}-01\"\n",
    "    target_index = np.where([t.strftime('%Y-%m-%d') == selected_date for t in cftime])[0][0]\n",
    "    index_data = nc_dataset[variable_name][target_index, :, :]\n",
    "    \n",
    "    # Calculate vmin, vmax, and bins\n",
    "    vmin = np.floor(np.nanmin(index_data) / 25) * 25\n",
    "    vmax = np.ceil(np.nanmax(index_data) / 25) * 25\n",
    "    interval = 25\n",
    "    bins = int((vmax - vmin) / interval)\n",
    "\n",
    "    # Create the plot\n",
    "    fig, ax = plt.subplots(figsize=(12, 8),\n",
    "                           facecolor='#f1f1f1',\n",
    "                           edgecolor='k',\n",
    "                           subplot_kw={'projection': ccrs.PlateCarree()})\n",
    "\n",
    "    cmap = plt.get_cmap(\"rainbow_r\", bins)\n",
    "    pcm = ax.pcolormesh(lon,\n",
    "                        lat,\n",
    "                        index_data,\n",
    "                        cmap=cmap,\n",
    "                        shading=\"auto\",\n",
    "                        vmin=vmin,\n",
    "                        vmax=vmax)\n",
    "\n",
    "    # Add Shapefile\n",
    "    konstanz_shp = r\".\\shapefiles\\kn_boundary.shp\"\n",
    "    konstanz_boundary = gpd.read_file(konstanz_shp)\n",
    "    konstanz_boundary = konstanz_boundary.to_crs(4326)\n",
    "    konstanz_boundary.boundary.plot(ax=ax, edgecolor='red', linewidth=1.2)\n",
    "\n",
    "    # Add a colorbar\n",
    "    ticks = np.linspace(vmin, vmax, num=bins + 1)\n",
    "    cbar = plt.colorbar(pcm, ax=ax, orientation='horizontal', pad=0.06, shrink=0.8, ticks=ticks)\n",
    "    cbar.set_label(\"Monthly Precipitation [mm]\", fontsize=12)\n",
    "    cbar.ax.tick_params(labelsize=12)\n",
    "\n",
    "    # # Add map features\n",
    "    ax.add_feature(cfeature.BORDERS, linestyle='-', linewidth=0.75, edgecolor='black')\n",
    "    ax.add_feature(cfeature.COASTLINE, linewidth=0.75)\n",
    "    ax.add_feature(cfeature.LAND, edgecolor='black', facecolor='none')\n",
    "    # ax.add_feature(cfeature.RIVERS, linewidth=0.5, edgecolor='blue')\n",
    "\n",
    "    # Add grid lines\n",
    "    gl = ax.gridlines(draw_labels=True,\n",
    "                      crs=ccrs.PlateCarree(),\n",
    "                      linewidth=0.5,\n",
    "                      color='gray',\n",
    "                      alpha=0.7,\n",
    "                      linestyle='--')\n",
    "    gl.top_labels = False \n",
    "    gl.right_labels = False\n",
    "    gl.xlabel_style = {'size': 10, 'color': 'black'}\n",
    "    gl.ylabel_style = {'size': 10, 'color': 'black'}\n",
    "\n",
    "    # Add title and labels\n",
    "    fig.text(0.5, 0.175, 'Longitude', ha='center', fontsize=14)\n",
    "    fig.text(-0.01, 0.5, 'Latitude', va='center', rotation='vertical', fontsize=14)\n",
    "    ax.set_title(f\"Monthly Precipitation, {selected_date}\", fontsize=14, fontweight='bold')\n",
    "    ax.set_aspect(\"equal\")\n",
    "\n",
    "    # Save or display the plot\n",
    "    plt.tight_layout()\n",
    "    if save:\n",
    "        temp_images_folder = os.path.join(output_folder, \"temp_images_folder\")\n",
    "        os.makedirs(temp_images_folder, exist_ok=True)\n",
    "        image_filepath = os.path.join(temp_images_folder, f\"{selected_year}-{selected_month}.png\")\n",
    "        plt.savefig(image_filepath, format='png', bbox_inches='tight')\n",
    "        print(f\"Plot saved to: {image_filepath}\")\n",
    "    plt.show()\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    # Example usage\n",
    "    main_plt_plot(\n",
    "        selected_year='2020',\n",
    "        selected_month='08',\n",
    "        save=True,\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 6.2 Plot monthly mean heatmap"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "ename": "FileNotFoundError",
     "evalue": "[Errno 2] No such file or directory: '.\\\\data\\\\alpine-monthly-precipitation\\\\csv\\\\LAPrec1871_monthly_means.csv'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[46], line 67\u001b[0m\n\u001b[0;32m     65\u001b[0m \u001b[38;5;66;03m# Example usage\u001b[39;00m\n\u001b[0;32m     66\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;18m__name__\u001b[39m \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m__main__\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[1;32m---> 67\u001b[0m     \u001b[43mplot_precipitation_heatmap\u001b[49m\u001b[43m(\u001b[49m\n\u001b[0;32m     68\u001b[0m \u001b[43m        \u001b[49m\u001b[43mstart_year\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m2010\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[0;32m     69\u001b[0m \u001b[43m        \u001b[49m\u001b[43mend_year\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m2020\u001b[39;49m\n\u001b[0;32m     70\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m     72\u001b[0m     plot_precipitation_heatmap(\n\u001b[0;32m     73\u001b[0m         start_year\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m2005\u001b[39m,\n\u001b[0;32m     74\u001b[0m     )\n",
      "Cell \u001b[1;32mIn[46], line 15\u001b[0m, in \u001b[0;36mplot_precipitation_heatmap\u001b[1;34m(start_year, end_year)\u001b[0m\n\u001b[0;32m     13\u001b[0m \u001b[38;5;66;03m# Load data and preprocess\u001b[39;00m\n\u001b[0;32m     14\u001b[0m csv_path \u001b[38;5;241m=\u001b[39m os\u001b[38;5;241m.\u001b[39mpath\u001b[38;5;241m.\u001b[39mjoin(csv_folder, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mLAPrec1871_monthly_means.csv\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m---> 15\u001b[0m df \u001b[38;5;241m=\u001b[39m \u001b[43mpd\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mread_csv\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcsv_path\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m     16\u001b[0m df \u001b[38;5;241m=\u001b[39m df\u001b[38;5;241m.\u001b[39mdrop(columns\u001b[38;5;241m=\u001b[39m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mYearly_Sum\u001b[39m\u001b[38;5;124m'\u001b[39m])\n\u001b[0;32m     17\u001b[0m df \u001b[38;5;241m=\u001b[39m df\u001b[38;5;241m.\u001b[39mset_index(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mYear\u001b[39m\u001b[38;5;124m'\u001b[39m)\n",
      "File \u001b[1;32mc:\\Users\\ShaileshShrestha\\anaconda3\\envs\\cds_env\\lib\\site-packages\\pandas\\io\\parsers\\readers.py:1026\u001b[0m, in \u001b[0;36mread_csv\u001b[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[0;32m   1013\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[0;32m   1014\u001b[0m     dialect,\n\u001b[0;32m   1015\u001b[0m     delimiter,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m   1022\u001b[0m     dtype_backend\u001b[38;5;241m=\u001b[39mdtype_backend,\n\u001b[0;32m   1023\u001b[0m )\n\u001b[0;32m   1024\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[1;32m-> 1026\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_read\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32mc:\\Users\\ShaileshShrestha\\anaconda3\\envs\\cds_env\\lib\\site-packages\\pandas\\io\\parsers\\readers.py:620\u001b[0m, in \u001b[0;36m_read\u001b[1;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[0;32m    617\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[0;32m    619\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[1;32m--> 620\u001b[0m parser \u001b[38;5;241m=\u001b[39m TextFileReader(filepath_or_buffer, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwds)\n\u001b[0;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[0;32m    623\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n",
      "File \u001b[1;32mc:\\Users\\ShaileshShrestha\\anaconda3\\envs\\cds_env\\lib\\site-packages\\pandas\\io\\parsers\\readers.py:1620\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[1;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[0;32m   1617\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[0;32m   1619\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m-> 1620\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_make_engine\u001b[49m\u001b[43m(\u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mengine\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32mc:\\Users\\ShaileshShrestha\\anaconda3\\envs\\cds_env\\lib\\site-packages\\pandas\\io\\parsers\\readers.py:1880\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[1;34m(self, f, engine)\u001b[0m\n\u001b[0;32m   1878\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m mode:\n\u001b[0;32m   1879\u001b[0m         mode \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m-> 1880\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;241m=\u001b[39m \u001b[43mget_handle\u001b[49m\u001b[43m(\u001b[49m\n\u001b[0;32m   1881\u001b[0m \u001b[43m    \u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1882\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1883\u001b[0m \u001b[43m    \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mencoding\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1884\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcompression\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mcompression\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1885\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmemory_map\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mmemory_map\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1886\u001b[0m \u001b[43m    \u001b[49m\u001b[43mis_text\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mis_text\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1887\u001b[0m \u001b[43m    \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mencoding_errors\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstrict\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1888\u001b[0m \u001b[43m    \u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstorage_options\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m   1889\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   1890\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m   1891\u001b[0m f \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles\u001b[38;5;241m.\u001b[39mhandle\n",
      "File \u001b[1;32mc:\\Users\\ShaileshShrestha\\anaconda3\\envs\\cds_env\\lib\\site-packages\\pandas\\io\\common.py:873\u001b[0m, in \u001b[0;36mget_handle\u001b[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[0;32m    868\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[0;32m    869\u001b[0m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[0;32m    870\u001b[0m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[0;32m    871\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mencoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mmode:\n\u001b[0;32m    872\u001b[0m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[1;32m--> 873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mopen\u001b[39;49m\u001b[43m(\u001b[49m\n\u001b[0;32m    874\u001b[0m \u001b[43m            \u001b[49m\u001b[43mhandle\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    875\u001b[0m \u001b[43m            \u001b[49m\u001b[43mioargs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    876\u001b[0m \u001b[43m            \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mioargs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mencoding\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    877\u001b[0m \u001b[43m            \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[0;32m    878\u001b[0m \u001b[43m            \u001b[49m\u001b[43mnewline\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[0;32m    879\u001b[0m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[0;32m    882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n",
      "\u001b[1;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '.\\\\data\\\\alpine-monthly-precipitation\\\\csv\\\\LAPrec1871_monthly_means.csv'"
     ]
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "\n",
    "def plot_precipitation_heatmap(start_year=2010,\n",
    "                               end_year=None):\n",
    "    \"\"\"\n",
    "    Creates a heatmap of monthly average precipitation from a CSV file.\n",
    "\n",
    "    Parameters:\n",
    "        start_year (int, optional): The starting year to filter the data. Default is 2010.\n",
    "        end_year (int, optional): The ending year to filter the data. If not provided, filters up to the maximum year.\n",
    "    \"\"\"\n",
    "    \n",
    "    # Load data and preprocess\n",
    "    csv_path = os.path.join(csv_folder, 'LAPrec1871_monthly_means.csv')\n",
    "    df = pd.read_csv(csv_path)\n",
    "    df = df.drop(columns=['Yearly_Sum'])\n",
    "    df = df.set_index('Year')\n",
    "    \n",
    "    # Determine the effective end year\n",
    "    max_year_in_data = df.index.max()\n",
    "    if end_year is not None:\n",
    "        end_year = min(max_year_in_data, end_year)\n",
    "    else:\n",
    "        end_year = max_year_in_data\n",
    "    \n",
    "    # Filter data based on start and end year\n",
    "    df_filtered = df.loc[start_year:end_year]\n",
    "    \n",
    "    # Create the heatmap\n",
    "    fig, ax = plt.subplots(figsize=(12, 8))\n",
    "    cmap = plt.get_cmap('Blues', 11)\n",
    "    \n",
    "    sns.heatmap(\n",
    "        df_filtered,\n",
    "        cmap=cmap,\n",
    "        annot=True,\n",
    "        annot_kws={\"fontsize\": 10},\n",
    "        fmt=\".0f\",\n",
    "        cbar_kws={\n",
    "            \"label\": f\"Precipitation ({summary.get('Units', 'mm')})\",\n",
    "            \"ticks\": range(0, 221, 20),\n",
    "            \"pad\": 0.015,\n",
    "        },\n",
    "        vmin=0,\n",
    "        vmax=220\n",
    "    )\n",
    "    \n",
    "    # Customize x-axis with month names\n",
    "    month_labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']  \n",
    "    ticks = range(1, 13)\n",
    "    shifted_ticks = [tick - 0.5 for tick in ticks]\n",
    "    # Set the ticks and labels\n",
    "    ax.set_xticks(shifted_ticks)\n",
    "    ax.set_xticklabels(month_labels, rotation=0, fontsize=10)\n",
    "    \n",
    "    # Add labels and title\n",
    "    ax.set_title(\"Monthly Average Precipitation\", fontsize=16, fontweight='bold')\n",
    "    ax.set_xlabel(\"Month\", fontsize=12)\n",
    "    ax.set_ylabel(\"Year\", fontsize=12)\n",
    "\n",
    "    # Adjust layout and display the plot\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "    \n",
    "# Example usage\n",
    "if __name__ == \"__main__\":\n",
    "    plot_precipitation_heatmap(\n",
    "        start_year=2010,\n",
    "        end_year=2020\n",
    "    )\n",
    "    \n",
    "    plot_precipitation_heatmap(\n",
    "        start_year=2005,\n",
    "    )"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "cds_env",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.16"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
