{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "bac698cd",
   "metadata": {},
   "source": [
    "# Temperature Statistics for Europe\n",
    "\n",
    "This dataset provides temperature exposure statistics for Europe, focusing on daily 2-meter air temperature (mean, minimum, and maximum) for entire years, as well as for winter (DJF) and summer (JJA) seasons. Derived using bias-adjusted EURO-CORDEX data, the statistics span a smoothed 30-year average from 1971 to 2100, resulting in a timeseries from 1986 to 2085, with model ensemble averages and associated standard deviations included. These temperature percentiles are crucial in public health and epidemiology for assessing health risks and impacts, enabling comparisons across regions under various climate change scenarios.\n",
    "\n",
    "**Information on Dataset:**\n",
    "* Source: [Temperature Statistics for Europe](https://cds.climate.copernicus.eu/datasets/sis-temperature-statistics?tab=overview)\n",
    "* Author: T. Tewes (Stadt Konstanz) \n",
    "* Notebook Version: 1.2 (Updated: January 24, 2024)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a13c4c69",
   "metadata": {},
   "source": [
    "## 1. Specifying the paths and working directories"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 252,
   "id": "be75da3a-e76a-4638-9369-74021000be9d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "\n",
    "''' ---- Specify Directories Here ---- '''\n",
    "download_folder = r\".\\data\\sis-temperature-statistics\\download\"\n",
    "working_folder = r\".\\data\\sis-temperature-statistics\\working\"\n",
    "geotiff_folder = r\".\\data\\sis-temperature-statistics\\geotiff\"\n",
    "csv_folder = r\".\\data\\sis-temperature-statistics\\csv\"\n",
    "output_folder = r\".\\data\\sis-temperature-statistics\\output\"\n",
    "''' ----- End of Declaration ---- '''\n",
    "\n",
    "os.makedirs(download_folder, exist_ok=True)\n",
    "os.makedirs(working_folder, exist_ok=True)\n",
    "os.makedirs(geotiff_folder, exist_ok=True)\n",
    "os.makedirs(csv_folder, exist_ok=True)\n",
    "os.makedirs(output_folder, exist_ok=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bf5a038c",
   "metadata": {},
   "source": [
    "## 2. Download and Extract the Dataset"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e7ea3e72",
   "metadata": {},
   "source": [
    "### 2.1 Authentication"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 253,
   "id": "1266bff9",
   "metadata": {},
   "outputs": [],
   "source": [
    "import cdsapi\n",
    "\n",
    "def main():\n",
    "    # API key for authentication\n",
    "    api_key = \"fdae60fd-35d4-436f-825c-c63fedab94a4\"\n",
    "    api_url = \"https://cds.climate.copernicus.eu/api\"\n",
    "\n",
    "    # Creation of the CDS API client\n",
    "    client = cdsapi.Client(url=api_url, key=api_key)\n",
    "    return client"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4fb5987e",
   "metadata": {},
   "source": [
    "### 2.2 Define the \"request\" and Download the Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 254,
   "id": "e7e7776f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Define additional request fields to ensure the request stays within the file size limit.\n",
    "# \n",
    "# When working with geospatial data or APIs that return map or satellite imagery,\n",
    "# limiting the geographical area of interest can prevent overly large requests\n",
    "# that exceed file size or processing limits. Bounding boxes are used to define\n",
    "# the geographic area for such requests.\n",
    "# \n",
    "# The coordinates below were obtained using the BBox Extractor tool:\n",
    "# https://str-ucture.github.io/bbox-extractor/\n",
    "# \n",
    "# BBox Extractor is a web-based tool that helps users interactively select and generate \n",
    "# bounding box coordinates in WGS84 format (latitude/longitude). This is especially \n",
    "# useful when working with APIs or datasets that require a geographic area input.\n",
    "\n",
    "# Define the bounding box coordinates (WGS84 format).\n",
    "# The coordinates are in the format: [North, West, South, East]\n",
    "bbox_wgs84_deutschland = [56.0, 5.8, 47.2, 15.0]\n",
    "bbox_wgs84_konstanz = [47.9, 8.9, 47.6, 9.3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 255,
   "id": "aefce33c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Alternatively, use a shapefile for precise geographic filtering\n",
    "import geopandas as gpd\n",
    "import math\n",
    "\n",
    "# Load the shapefile of Konstanz (WGS84 projection) for geographic boundary filtering\n",
    "de_shapefile = r\"./shapefiles/de_boundary.shp\"\n",
    "de_gdf = gpd.read_file(de_shapefile)\n",
    "\n",
    "# Extract the bounding box of the shapefile\n",
    "de_bounds = de_gdf.total_bounds\n",
    "\n",
    "# Adjust and buffer the bounding box to create a slightly larger\n",
    "de_bounds_adjusted = [(math.floor(de_bounds[0]* 10)/10)-0.1,\n",
    "                      (math.floor(de_bounds[1]* 10)/10)-0.1,\n",
    "                      (math.ceil(de_bounds[2]* 10)/10)+0.1,\n",
    "                      (math.ceil(de_bounds[3]* 10)/10)+0.1]\n",
    "\n",
    "# Rearrange the coordinates to the format: [North, West, South, East]\n",
    "bbox_de_bounds_adjusted = [de_bounds_adjusted[3], de_bounds_adjusted[0],\n",
    "                           de_bounds_adjusted[1], de_bounds_adjusted[2]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 256,
   "id": "b98824ec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Selected Variable: average_temperature\n",
      "Selected Period: year\n"
     ]
    }
   ],
   "source": [
    "# Define available options for periods and temperature variables\n",
    "period_list = [\"year\", \"summer\", \"winter\"]\n",
    "variable_list = [\"average_temperature\", \"minimum_temperature\", \"maximum_temperature\"]\n",
    "\n",
    "# Select the period and variable for processing; modify these as needed\n",
    "# Defaults set to \"year\" and \"average_temperature\"\n",
    "selected_period = period_list[0]  # Default: \"year\"\n",
    "selected_variable = variable_list[0]  # Default: \"average_temperature\"\n",
    "\n",
    "# Display the selected variable and period\n",
    "print(f\"Selected Variable: {selected_variable}\\nSelected Period: {selected_period}\")\n",
    "\n",
    "# Define statistics based on the selected variable\n",
    "# For \"average_temperature\", include additional statistics; otherwise, use only \"time_average\"\n",
    "statistic = (\n",
    "    ['time_average', '10th_percentile', '90th_percentile']\n",
    "    if selected_variable == \"average_temperature\"\n",
    "    else ['time_average']\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 257,
   "id": "80dd9e85-f124-4457-808e-b6ff3df3989f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Definition of the dataset and the request parameters\n",
    "dataset = \"sis-temperature-statistics\"\n",
    "request = {\n",
    "    \"variable\": selected_variable,\n",
    "    \"period\": selected_period,\n",
    "    \"statistic\": statistic,\n",
    "    \"experiment\": [\n",
    "        \"rcp4_5\",\n",
    "        \"rcp8_5\"\n",
    "    ],\n",
    "    \"ensemble_statistic\": [\n",
    "        \"ensemble_members_average\",\n",
    "        \"ensemble_members_standard_deviation\"\n",
    "    ],\n",
    "    \"area\": bbox_de_bounds_adjusted\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 258,
   "id": "c49cc794",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset already downloaded.\n"
     ]
    }
   ],
   "source": [
    "# Execute it to download the dataset:\n",
    "def main_retrieve():\n",
    "    dataset_filename = f\"{dataset}_{selected_period}_{selected_variable}.zip\"\n",
    "    dataset_filepath = os.path.join(download_folder, dataset_filename)\n",
    "\n",
    "    # Download the dataset only if the dataset has not been downloaded before\n",
    "    if not os.path.isfile(dataset_filepath):\n",
    "        # Call the CDS client only if the dataset has not been downloaded before\n",
    "        client = main()\n",
    "        # Download the dataset with the defined request parameters\n",
    "        client.retrieve(dataset, request, dataset_filepath)\n",
    "    else:\n",
    "        print(\"Dataset already downloaded.\")\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    main_retrieve()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79225c6e",
   "metadata": {},
   "source": [
    "### 2.3 Extract the ZIP files in folder(s)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 259,
   "id": "aaf83cb4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Folder is not empty. Skipping extraction.\n"
     ]
    }
   ],
   "source": [
    "import zipfile\n",
    "\n",
    "# Define the folder where the extracted files will be saved\n",
    "extract_folder = os.path.join(working_folder, selected_period)\n",
    "os.makedirs(extract_folder, exist_ok=True)\n",
    "\n",
    "# Extract the ZIP file only if the folder is empty\n",
    "try:  \n",
    "    if not os.listdir(extract_folder):\n",
    "        for variable in variable_list:\n",
    "            # Construct the filename for the ZIP file based on the selected period and variable\n",
    "            dataset_filename = f\"{dataset}_{selected_period}_{variable}.zip\"\n",
    "            dataset_filepath = os.path.join(download_folder, dataset_filename)\n",
    "            \n",
    "            # Attempt to open and extract the ZIP file\n",
    "            with zipfile.ZipFile(dataset_filepath, 'r') as zip_ref:\n",
    "                zip_ref.extractall(extract_folder)\n",
    "                print(f\"Successfully extracted files to: {extract_folder}\")\n",
    "    else:\n",
    "        print(\"Folder is not empty. Skipping extraction.\")\n",
    "except FileNotFoundError:\n",
    "    print(f\"Error: The file {dataset_filepath} was not found.\")\n",
    "except zipfile.BadZipFile:\n",
    "    print(f\"Error: The file {dataset_filepath} is not a valid zip file.\")\n",
    "except Exception as e:\n",
    "    print(f\"An unexpected error occurred: {e}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f05cafc",
   "metadata": {},
   "source": [
    "## 3. Read the NetCDF File and Print the Metadata\n",
    "\n",
    "⚠️ <span style=\"background-color: red; color: white; padding: 2px 4px;\">Important</span>\n",
    "\n",
    "After downloading the datasets, **update the** `selected_period` in the code block below to proceed with analysis, data extraction, and visualization. This step is crucial for proceeding with analysis, data extraction, and visualization."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 260,
   "id": "ef1adf0a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Selected period: summer\n"
     ]
    }
   ],
   "source": [
    "# Set the selected period for analysis (0: year, 1: summer, 2: winter)\n",
    "selected_period = period_list[1] # Update this index to change the period\n",
    "print(f\"Selected period: {selected_period}\")\n",
    "\n",
    "# Define the extracted folder path based on the selected period\n",
    "extract_folder = os.path.join(working_folder, selected_period)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "008a3536",
   "metadata": {},
   "source": [
    "### 3.1 Create a Dataframe of Available netCDF Files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 261,
   "id": "b00f563d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>filename</th>\n",
       "      <th>ds_period</th>\n",
       "      <th>ds_variable</th>\n",
       "      <th>ds_statistic</th>\n",
       "      <th>variable_name</th>\n",
       "      <th>variable_shape</th>\n",
       "      <th>rcp</th>\n",
       "      <th>rcp_statistic</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>mean_Tmax_Summer_rcp45_mea...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmax</td>\n",
       "      <td>mean</td>\n",
       "      <td>mean_Tmax_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp45</td>\n",
       "      <td>mean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>mean_Tmax_Summer_rcp45_std...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmax</td>\n",
       "      <td>mean</td>\n",
       "      <td>mean_Tmax_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp45</td>\n",
       "      <td>stdev</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>mean_Tmax_Summer_rcp85_mea...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmax</td>\n",
       "      <td>mean</td>\n",
       "      <td>mean_Tmax_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp85</td>\n",
       "      <td>mean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mean_Tmax_Summer_rcp85_std...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmax</td>\n",
       "      <td>mean</td>\n",
       "      <td>mean_Tmax_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp85</td>\n",
       "      <td>stdev</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>mean_Tmean_Summer_rcp45_me...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmean</td>\n",
       "      <td>mean</td>\n",
       "      <td>mean_Tmean_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp45</td>\n",
       "      <td>mean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>mean_Tmean_Summer_rcp45_st...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmean</td>\n",
       "      <td>mean</td>\n",
       "      <td>mean_Tmean_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp45</td>\n",
       "      <td>stdev</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>mean_Tmean_Summer_rcp85_me...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmean</td>\n",
       "      <td>mean</td>\n",
       "      <td>mean_Tmean_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp85</td>\n",
       "      <td>mean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>mean_Tmean_Summer_rcp85_st...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmean</td>\n",
       "      <td>mean</td>\n",
       "      <td>mean_Tmean_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp85</td>\n",
       "      <td>stdev</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>p10_Tmean_Summer_rcp45_mea...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmean</td>\n",
       "      <td>p10</td>\n",
       "      <td>p10_Tmean_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp45</td>\n",
       "      <td>mean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>p10_Tmean_Summer_rcp45_std...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmean</td>\n",
       "      <td>p10</td>\n",
       "      <td>p10_Tmean_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp45</td>\n",
       "      <td>stdev</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>p10_Tmean_Summer_rcp85_mea...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmean</td>\n",
       "      <td>p10</td>\n",
       "      <td>p10_Tmean_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp85</td>\n",
       "      <td>mean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>p10_Tmean_Summer_rcp85_std...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmean</td>\n",
       "      <td>p10</td>\n",
       "      <td>p10_Tmean_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp85</td>\n",
       "      <td>stdev</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>p90_Tmean_Summer_rcp45_mea...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmean</td>\n",
       "      <td>p90</td>\n",
       "      <td>p90_Tmean_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp45</td>\n",
       "      <td>mean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>p90_Tmean_Summer_rcp45_std...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmean</td>\n",
       "      <td>p90</td>\n",
       "      <td>p90_Tmean_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp45</td>\n",
       "      <td>stdev</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>p90_Tmean_Summer_rcp85_mea...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmean</td>\n",
       "      <td>p90</td>\n",
       "      <td>p90_Tmean_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp85</td>\n",
       "      <td>mean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>p90_Tmean_Summer_rcp85_std...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmean</td>\n",
       "      <td>p90</td>\n",
       "      <td>p90_Tmean_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp85</td>\n",
       "      <td>stdev</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>mean_Tmin_Summer_rcp45_mea...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmin</td>\n",
       "      <td>mean</td>\n",
       "      <td>mean_Tmin_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp45</td>\n",
       "      <td>mean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>mean_Tmin_Summer_rcp45_std...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmin</td>\n",
       "      <td>mean</td>\n",
       "      <td>mean_Tmin_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp45</td>\n",
       "      <td>stdev</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>mean_Tmin_Summer_rcp85_mea...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmin</td>\n",
       "      <td>mean</td>\n",
       "      <td>mean_Tmin_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp85</td>\n",
       "      <td>mean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>mean_Tmin_Summer_rcp85_std...</td>\n",
       "      <td>Summer</td>\n",
       "      <td>Tmin</td>\n",
       "      <td>mean</td>\n",
       "      <td>mean_Tmin_Summer</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "      <td>rcp85</td>\n",
       "      <td>stdev</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         filename ds_period ds_variable ds_statistic  \\\n",
       "0   mean_Tmax_Summer_rcp45_mea...    Summer        Tmax         mean   \n",
       "1   mean_Tmax_Summer_rcp45_std...    Summer        Tmax         mean   \n",
       "2   mean_Tmax_Summer_rcp85_mea...    Summer        Tmax         mean   \n",
       "3   mean_Tmax_Summer_rcp85_std...    Summer        Tmax         mean   \n",
       "4   mean_Tmean_Summer_rcp45_me...    Summer       Tmean         mean   \n",
       "5   mean_Tmean_Summer_rcp45_st...    Summer       Tmean         mean   \n",
       "6   mean_Tmean_Summer_rcp85_me...    Summer       Tmean         mean   \n",
       "7   mean_Tmean_Summer_rcp85_st...    Summer       Tmean         mean   \n",
       "8   p10_Tmean_Summer_rcp45_mea...    Summer       Tmean          p10   \n",
       "9   p10_Tmean_Summer_rcp45_std...    Summer       Tmean          p10   \n",
       "10  p10_Tmean_Summer_rcp85_mea...    Summer       Tmean          p10   \n",
       "11  p10_Tmean_Summer_rcp85_std...    Summer       Tmean          p10   \n",
       "12  p90_Tmean_Summer_rcp45_mea...    Summer       Tmean          p90   \n",
       "13  p90_Tmean_Summer_rcp45_std...    Summer       Tmean          p90   \n",
       "14  p90_Tmean_Summer_rcp85_mea...    Summer       Tmean          p90   \n",
       "15  p90_Tmean_Summer_rcp85_std...    Summer       Tmean          p90   \n",
       "16  mean_Tmin_Summer_rcp45_mea...    Summer        Tmin         mean   \n",
       "17  mean_Tmin_Summer_rcp45_std...    Summer        Tmin         mean   \n",
       "18  mean_Tmin_Summer_rcp85_mea...    Summer        Tmin         mean   \n",
       "19  mean_Tmin_Summer_rcp85_std...    Summer        Tmin         mean   \n",
       "\n",
       "        variable_name variable_shape    rcp rcp_statistic  \n",
       "0    mean_Tmax_Summer  (100, 82, 95)  rcp45          mean  \n",
       "1    mean_Tmax_Summer  (100, 82, 95)  rcp45         stdev  \n",
       "2    mean_Tmax_Summer  (100, 82, 95)  rcp85          mean  \n",
       "3    mean_Tmax_Summer  (100, 82, 95)  rcp85         stdev  \n",
       "4   mean_Tmean_Summer  (100, 82, 95)  rcp45          mean  \n",
       "5   mean_Tmean_Summer  (100, 82, 95)  rcp45         stdev  \n",
       "6   mean_Tmean_Summer  (100, 82, 95)  rcp85          mean  \n",
       "7   mean_Tmean_Summer  (100, 82, 95)  rcp85         stdev  \n",
       "8    p10_Tmean_Summer  (100, 82, 95)  rcp45          mean  \n",
       "9    p10_Tmean_Summer  (100, 82, 95)  rcp45         stdev  \n",
       "10   p10_Tmean_Summer  (100, 82, 95)  rcp85          mean  \n",
       "11   p10_Tmean_Summer  (100, 82, 95)  rcp85         stdev  \n",
       "12   p90_Tmean_Summer  (100, 82, 95)  rcp45          mean  \n",
       "13   p90_Tmean_Summer  (100, 82, 95)  rcp45         stdev  \n",
       "14   p90_Tmean_Summer  (100, 82, 95)  rcp85          mean  \n",
       "15   p90_Tmean_Summer  (100, 82, 95)  rcp85         stdev  \n",
       "16   mean_Tmin_Summer  (100, 82, 95)  rcp45          mean  \n",
       "17   mean_Tmin_Summer  (100, 82, 95)  rcp45         stdev  \n",
       "18   mean_Tmin_Summer  (100, 82, 95)  rcp85          mean  \n",
       "19   mean_Tmin_Summer  (100, 82, 95)  rcp85         stdev  "
      ]
     },
     "execution_count": 261,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import re\n",
    "import pandas as pd\n",
    "import netCDF4 as nc\n",
    "import numpy as np\n",
    "\n",
    "def meta(filename):\n",
    "    # Match the filename against the expected pattern\n",
    "    match = re.search(\n",
    "        r\"(?P<ds_statistic>mean|p10|p90)_(?P<ds_variable>Tmean|Tmax|Tmin)_(?P<ds_period>Yearly|Winter|Summer)_(?P<rcp>rcp\\d{2})_(?P<rcp_statistic>mean|stdev)_v(?P<version>\\d+\\.\\d+)\\.\",\n",
    "        filename\n",
    "    )\n",
    "    \n",
    "    # Raise an error if the filename doesn't match the expected pattern\n",
    "    if not match:\n",
    "        raise ValueError(\"the given filename does not fit the expected naming scheme\")\n",
    "    \n",
    "    # Function to extract the variable name from the NetCDF file\n",
    "    filepath = os.path.join(extract_folder, filename)\n",
    "    def get_nc_variable():\n",
    "        with nc.Dataset(filepath, 'r') as nc_dataset:\n",
    "            variable_names = list(nc_dataset.variables.keys())\n",
    "\n",
    "            primary_variable_index = 0  # Adjust this index as needed\n",
    "            if primary_variable_index >= len(variable_names):\n",
    "                raise IndexError(\"Primary variable index is out of range for the NetCDF variables.\")\n",
    "            \n",
    "            primary_variable = variable_names[primary_variable_index]\n",
    "            primary_variable_shape = np.shape(nc_dataset[primary_variable])\n",
    "\n",
    "            return primary_variable, primary_variable_shape\n",
    "    \n",
    "    # Return metadata as a dictionary\n",
    "    return dict(\n",
    "        filename=filename,\n",
    "        path=os.path.join(extract_folder, filename),\n",
    "        ds_period=match.group('ds_period'),\n",
    "        ds_variable=match.group('ds_variable'),\n",
    "        ds_statistic=match.group('ds_statistic'),\n",
    "        variable_name=get_nc_variable()[0],\n",
    "        variable_shape=get_nc_variable()[1],\n",
    "        rcp=match.group('rcp'),\n",
    "        rcp_statistic=match.group('rcp_statistic'),\n",
    "    )\n",
    "\n",
    "# Extract metadata for all NetCDF files in the folder\n",
    "nc_files = [meta(f) for f in os.listdir(extract_folder) if f.endswith('.nc')]\n",
    "nc_files = sorted(nc_files, key=lambda x: (x['ds_variable'], x['ds_statistic']))\n",
    "\n",
    "df_nc_files = pd.DataFrame.from_dict(nc_files)\n",
    "\n",
    "# Modify pandas display options\n",
    "pd.options.display.max_colwidth = 30\n",
    "\n",
    "# Display the DataFrame without displaying the 'path' column\n",
    "df_nc_files.loc[:, df_nc_files.columns != 'path']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7b27b1ed",
   "metadata": {},
   "source": [
    "### 3.1 Overview of the Downloaded Data Structure\n",
    "\n",
    "The diagram below illustrates the structure of the **sis-temperature-statistics data**, organized into four hierarchical levels:\n",
    "\n",
    "1. **Period**: Represents the time unit for the data, which can be one of the following:\n",
    "    - **year**\n",
    "    - **summer**\n",
    "    - **winter**\n",
    "\n",
    "2. **Variable**: The data includes three temperature variables:\n",
    "    - **Average Temperature**  \n",
    "    - **Minimum Temperature**  \n",
    "    - **Maximum Temperature**\n",
    "\n",
    "3. **Statistic**: For each variable, the following statistics are calculated:\n",
    "    - **Time Average**  \n",
    "    - **10th Percentile** (only for Average Temperature)  \n",
    "    - **9th Percentile** (only for Average Temperature)\n",
    "\n",
    "4. **Experiment**: The data is provided under two climate scenarios:\n",
    "    - **rcp45**\n",
    "    - **rcp85**\n",
    "    - For each scenario, data is provided in two forms:\n",
    "        - **rep45_mean**, **rcp45_std**\n",
    "        - **rep85_mean**, **rcp85_std**\n",
    "\n",
    "The data structure flows sequentially from **Period** to **Variable**, then to **Statistic**, and finally to **Experiment** outputs. This hierarchy shows how temperature data is organized, calculated, and analyzed.\n",
    "\n",
    "<img src=\"./images/sis-temperature-statistics-data-structure_v2.jpg\" width=\"550\" style=\"display: block; margin: 0 auto; border: 1px solid #aeaeae\">"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d2b008c7",
   "metadata": {},
   "source": [
    "### 3.2 Print unique Variable name(s) and Available Variables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 262,
   "id": "f93d003a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1  mean_Tmax_Summer  : Available variables: ['mean_Tmax_Summer', 'height', 'lat', 'lon', 'time']\n",
      "5  mean_Tmean_Summer : Available variables: ['mean_Tmean_Summer', 'height', 'lat', 'lon', 'time']\n",
      "9  p10_Tmean_Summer  : Available variables: ['p10_Tmean_Summer', 'quantile', 'lat', 'lon', 'time']\n",
      "13 p90_Tmean_Summer  : Available variables: ['p90_Tmean_Summer', 'quantile', 'lat', 'lon', 'time']\n",
      "17 mean_Tmin_Summer  : Available variables: ['mean_Tmin_Summer', 'height', 'lat', 'lon', 'time']\n"
     ]
    }
   ],
   "source": [
    "# Keep track of processed variable names to avoid duplicates\n",
    "seen_variables = set()\n",
    "\n",
    "# List all variables in each NetCDF file\n",
    "for i, nc_file in enumerate(nc_files):\n",
    "    variable_name = nc_file['variable_name']\n",
    "    \n",
    "    # Skip if the variable has already been processed\n",
    "    if variable_name in seen_variables:\n",
    "        continue\n",
    "\n",
    "    # Open the NetCDF file in read mode\n",
    "    with nc.Dataset(nc_file['path'], mode='r') as nc_dataset:\n",
    "        # List all variables in the current dataset\n",
    "        variables_list = list(nc_dataset.variables.keys())\n",
    "        \n",
    "        # Print details of the file and its variables\n",
    "        print(f\"{i + 1:<2} {variable_name:<18}: Available variables: {variables_list}\")\n",
    "    \n",
    "    # Mark this variable as seen\n",
    "    seen_variables.add(variable_name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 263,
   "id": "21cdf370",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>nc_variables</th>\n",
       "      <th>unit</th>\n",
       "      <th>shape</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>mean_Tmax_Summer</td>\n",
       "      <td>degrees C</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>height</td>\n",
       "      <td>m</td>\n",
       "      <td>()</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>lat</td>\n",
       "      <td>degrees_north</td>\n",
       "      <td>(82,)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>lon</td>\n",
       "      <td>degrees_east</td>\n",
       "      <td>(95,)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>time</td>\n",
       "      <td>days since 1986-06-01</td>\n",
       "      <td>(100,)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       nc_variables                   unit          shape\n",
       "0  mean_Tmax_Summer              degrees C  (100, 82, 95)\n",
       "1            height                      m             ()\n",
       "2               lat          degrees_north          (82,)\n",
       "3               lon           degrees_east          (95,)\n",
       "4              time  days since 1986-06-01         (100,)"
      ]
     },
     "execution_count": 263,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Extract information from the first NetCDF file\n",
    "nc_file = nc_files[0]\n",
    "\n",
    "# Open the NetCDF file in read mode\n",
    "with nc.Dataset(nc_file['path'], mode='r') as nc_dataset:\n",
    "    # Retrieve a list of all variable names in the dataset\n",
    "    variables_list = list(nc_dataset.variables.keys())\n",
    "    \n",
    "    # Initialize a list to hold the rows of the DataFrame\n",
    "    rows = []\n",
    "\n",
    "    # Loop through all variables in the dataset\n",
    "    for test_var in variables_list:\n",
    "        try:\n",
    "            # Get the variable object\n",
    "            var_obj = nc_dataset.variables[test_var]\n",
    "            \n",
    "            # Extract attributes: units (default to 'N/A' if not present) and shape\n",
    "            unit = getattr(var_obj, 'units', 'N/A')\n",
    "            shape = var_obj.shape\n",
    "            \n",
    "            # Append the extracted details to the rows list\n",
    "            rows.append({\n",
    "                \"nc_variables\": test_var,\n",
    "                \"unit\": unit,\n",
    "                \"shape\": shape\n",
    "            })\n",
    "        except Exception as e:\n",
    "            # Handle any errors and continue processing other variables\n",
    "            print(f\"Error processing variable '{test_var}': {e}\")\n",
    "\n",
    "# Create a DataFrame from the rows and display it\n",
    "df = pd.DataFrame(rows)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 264,
   "id": "26c4d6e3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1. Summary of Variable 'mean_Tmax_Summer':\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Description</th>\n",
       "      <th>Remarks</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Variable Name</td>\n",
       "      <td>mean_Tmax_Summer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Data Type</td>\n",
       "      <td>float32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Shape</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Variable Info (Dimensions)</td>\n",
       "      <td>('time', 'lat', 'lon')</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Units</td>\n",
       "      <td>degrees C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Long Name</td>\n",
       "      <td>Ensemble members average o...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Description                        Remarks\n",
       "0               Variable Name               mean_Tmax_Summer\n",
       "1                   Data Type                        float32\n",
       "2                       Shape                  (100, 82, 95)\n",
       "3  Variable Info (Dimensions)         ('time', 'lat', 'lon')\n",
       "4                       Units                      degrees C\n",
       "5                   Long Name  Ensemble members average o..."
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5. Summary of Variable 'mean_Tmean_Summer':\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Description</th>\n",
       "      <th>Remarks</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Variable Name</td>\n",
       "      <td>mean_Tmean_Summer</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Data Type</td>\n",
       "      <td>float32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Shape</td>\n",
       "      <td>(100, 82, 95)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Variable Info (Dimensions)</td>\n",
       "      <td>('time', 'lat', 'lon')</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Units</td>\n",
       "      <td>degrees C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Long Name</td>\n",
       "      <td>Ensemble members average o...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Description                        Remarks\n",
       "0               Variable Name              mean_Tmean_Summer\n",
       "1                   Data Type                        float32\n",
       "2                       Shape                  (100, 82, 95)\n",
       "3  Variable Info (Dimensions)         ('time', 'lat', 'lon')\n",
       "4                       Units                      degrees C\n",
       "5                   Long Name  Ensemble members average o..."
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ".... (Output truncated to first 2 variables)\n"
     ]
    }
   ],
   "source": [
    "# Keep track of processed variable names to avoid duplicates\n",
    "seen_variables = set()\n",
    "\n",
    "# List all variables info in each NetCDF file\n",
    "for i, nc_file in enumerate(nc_files):\n",
    "    variable_name = nc_file['variable_name']\n",
    "    \n",
    "    # Skip if the variable has already been processed\n",
    "    if variable_name in seen_variables:\n",
    "        continue\n",
    "    \n",
    "    # Open the NetCDF file in read mode\n",
    "    with nc.Dataset(nc_file['path'], mode='r') as nc_dataset:\n",
    "        # Access the primary variable data\n",
    "        variable_data = nc_dataset[variable_name]\n",
    "        \n",
    "        # Generate a summary of the primary variable\n",
    "        summary = {\n",
    "            \"Variable Name\": variable_name,\n",
    "            \"Data Type\": variable_data.dtype,\n",
    "            \"Shape\": variable_data.shape,\n",
    "            \"Variable Info (Dimensions)\": f\"{variable_data.dimensions}\",\n",
    "            \"Units\": getattr(variable_data, \"units\", \"N/A\"),\n",
    "            \"Long Name\": getattr(variable_data, \"long_name\", \"N/A\"),\n",
    "        }\n",
    "        \n",
    "        # Display dataset summary as a DataFrame for better visualization\n",
    "        nc_summary = pd.DataFrame(list(summary.items()), columns=['Description', 'Remarks'])\n",
    "        print(f\"{i + 1}. Summary of Variable '{variable_name}':\")\n",
    "        display(nc_summary)\n",
    "    \n",
    "    # Add the variable name to the seen set\n",
    "    seen_variables.add(variable_name)\n",
    "    \n",
    "    # Limit output\n",
    "    output_limit = 2\n",
    "    if len(seen_variables) >= output_limit:\n",
    "        print(f\".... (Output truncated to first {output_limit} variables)\")\n",
    "        break"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4de79a25",
   "metadata": {},
   "source": [
    "## 4. Export Dataset to CSV"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3ec568cf",
   "metadata": {},
   "source": [
    "### 4.1 Define a function to convert NetCDF data to a pandas DataFrame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 265,
   "id": "3b6369c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "import xarray as xr\n",
    "\n",
    "# Function to convert NetCDF data to a pandas DataFrame\n",
    "def netcdf_to_dataframe(nc_file, bounding_box=None):\n",
    "\n",
    "    with xr.open_dataset(nc_file['path']) as nc_dataset:\n",
    "        # Access the variable data from the datase\n",
    "        variable_data = nc_dataset[nc_file['variable_name']]\n",
    "        \n",
    "        # Ensure latitude and longitude names are correct\n",
    "        latitude_name = 'latitude' if 'latitude' in nc_dataset.coords else 'lat'\n",
    "        longitude_name = 'longitude' if 'longitude' in nc_dataset.coords else 'lon'\n",
    "        \n",
    "        # Filter the data based on the bounding box, if provided\n",
    "        if bounding_box:\n",
    "            filtered_data = variable_data.where(\n",
    "                (nc_dataset[latitude_name] >= bounding_box[1]) & (nc_dataset[latitude_name] <= bounding_box[3]) &\n",
    "                (nc_dataset[longitude_name] >= bounding_box[0]) & (nc_dataset[longitude_name] <= bounding_box[2]),\n",
    "                drop=True\n",
    "            )\n",
    "        else:\n",
    "            filtered_data = variable_data\n",
    "\n",
    "        # Convert the xarray dataset to a pandas DataFrame\n",
    "        df = filtered_data.to_dataframe().reset_index().set_index(['time', latitude_name, longitude_name])\n",
    "\n",
    "        # Rename the value column name (optional)\n",
    "        variable_column_name = f\"{nc_file['ds_period']}_{nc_file['ds_variable']}_{nc_file['ds_statistic']}_{nc_file['rcp']}_{nc_file['rcp_statistic']}\"\n",
    "        df.rename(columns={nc_file['variable_name']: variable_column_name}, inplace=True)\n",
    "\n",
    "        # Drop unnecessary columns (Varies based on the dataset)\n",
    "        if 'height' in df.columns:\n",
    "            df = df.drop(columns=['height'])\n",
    "        elif 'quantile' in df.columns:\n",
    "            df = df.drop(columns=['quantile'])\n",
    "\n",
    "        return df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "45979902",
   "metadata": {},
   "source": [
    "### 4.2 Create Merged DataFrame and Export as CSV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 281,
   "id": "8f777a63",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "File already exists at .\\data\\sis-temperature-statistics\\csv\\sis-temperature-statistics-Summer.csv.zip.\n",
      "Skipping export.\n",
      "Reading existing CSV file...\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Summer_Tmax _mean_rcp45 _mean</th>\n",
       "      <th>Summer_Tmax _mean_rcp45 _stdev</th>\n",
       "      <th>Summer_Tmax _mean_rcp85 _mean</th>\n",
       "      <th>Summer_Tmax _mean_rcp85 _stdev</th>\n",
       "      <th>Summer_Tmea n_mean_rcp4 5_mean</th>\n",
       "      <th>Summer_Tmea n_mean_rcp4 5_stdev</th>\n",
       "      <th>Summer_Tmea n_mean_rcp8 5_mean</th>\n",
       "      <th>Summer_Tmea n_mean_rcp8 5_stdev</th>\n",
       "      <th>Summer_Tmea n_p10_rcp45 _mean</th>\n",
       "      <th>Summer_Tmea n_p10_rcp45 _stdev</th>\n",
       "      <th>Summer_Tmea n_p10_rcp85 _mean</th>\n",
       "      <th>Summer_Tmea n_p10_rcp85 _stdev</th>\n",
       "      <th>Summer_Tmea n_p90_rcp45 _mean</th>\n",
       "      <th>Summer_Tmea n_p90_rcp45 _stdev</th>\n",
       "      <th>Summer_Tmea n_p90_rcp85 _mean</th>\n",
       "      <th>Summer_Tmea n_p90_rcp85 _stdev</th>\n",
       "      <th>Summer_Tmin _mean_rcp45 _mean</th>\n",
       "      <th>Summer_Tmin _mean_rcp45 _stdev</th>\n",
       "      <th>Summer_Tmin _mean_rcp85 _mean</th>\n",
       "      <th>Summer_Tmin _mean_rcp85 _stdev</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>time</th>\n",
       "      <th>lat</th>\n",
       "      <th>lon</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">1986-06-01</th>\n",
       "      <th rowspan=\"5\" valign=\"top\">47.10</th>\n",
       "      <th>5.70</th>\n",
       "      <td>24.18</td>\n",
       "      <td>0.20</td>\n",
       "      <td>24.18</td>\n",
       "      <td>0.19</td>\n",
       "      <td>18.79</td>\n",
       "      <td>0.26</td>\n",
       "      <td>18.79</td>\n",
       "      <td>0.25</td>\n",
       "      <td>14.36</td>\n",
       "      <td>0.29</td>\n",
       "      <td>14.36</td>\n",
       "      <td>0.29</td>\n",
       "      <td>23.32</td>\n",
       "      <td>0.30</td>\n",
       "      <td>23.32</td>\n",
       "      <td>0.32</td>\n",
       "      <td>13.35</td>\n",
       "      <td>0.47</td>\n",
       "      <td>13.35</td>\n",
       "      <td>0.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5.80</th>\n",
       "      <td>23.92</td>\n",
       "      <td>0.23</td>\n",
       "      <td>23.92</td>\n",
       "      <td>0.21</td>\n",
       "      <td>18.59</td>\n",
       "      <td>0.27</td>\n",
       "      <td>18.59</td>\n",
       "      <td>0.27</td>\n",
       "      <td>14.09</td>\n",
       "      <td>0.28</td>\n",
       "      <td>14.09</td>\n",
       "      <td>0.27</td>\n",
       "      <td>23.20</td>\n",
       "      <td>0.41</td>\n",
       "      <td>23.20</td>\n",
       "      <td>0.45</td>\n",
       "      <td>13.21</td>\n",
       "      <td>0.41</td>\n",
       "      <td>13.21</td>\n",
       "      <td>0.41</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5.90</th>\n",
       "      <td>23.34</td>\n",
       "      <td>0.23</td>\n",
       "      <td>23.34</td>\n",
       "      <td>0.22</td>\n",
       "      <td>18.15</td>\n",
       "      <td>0.20</td>\n",
       "      <td>18.15</td>\n",
       "      <td>0.20</td>\n",
       "      <td>13.62</td>\n",
       "      <td>0.23</td>\n",
       "      <td>13.62</td>\n",
       "      <td>0.22</td>\n",
       "      <td>22.78</td>\n",
       "      <td>0.37</td>\n",
       "      <td>22.78</td>\n",
       "      <td>0.42</td>\n",
       "      <td>12.91</td>\n",
       "      <td>0.30</td>\n",
       "      <td>12.91</td>\n",
       "      <td>0.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6.00</th>\n",
       "      <td>22.82</td>\n",
       "      <td>0.20</td>\n",
       "      <td>22.82</td>\n",
       "      <td>0.18</td>\n",
       "      <td>17.63</td>\n",
       "      <td>0.21</td>\n",
       "      <td>17.63</td>\n",
       "      <td>0.20</td>\n",
       "      <td>13.11</td>\n",
       "      <td>0.28</td>\n",
       "      <td>13.11</td>\n",
       "      <td>0.27</td>\n",
       "      <td>22.23</td>\n",
       "      <td>0.24</td>\n",
       "      <td>22.23</td>\n",
       "      <td>0.27</td>\n",
       "      <td>12.38</td>\n",
       "      <td>0.35</td>\n",
       "      <td>12.38</td>\n",
       "      <td>0.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6.10</th>\n",
       "      <td>22.25</td>\n",
       "      <td>0.21</td>\n",
       "      <td>22.25</td>\n",
       "      <td>0.18</td>\n",
       "      <td>17.12</td>\n",
       "      <td>0.22</td>\n",
       "      <td>17.12</td>\n",
       "      <td>0.21</td>\n",
       "      <td>12.56</td>\n",
       "      <td>0.27</td>\n",
       "      <td>12.56</td>\n",
       "      <td>0.26</td>\n",
       "      <td>21.75</td>\n",
       "      <td>0.30</td>\n",
       "      <td>21.75</td>\n",
       "      <td>0.33</td>\n",
       "      <td>11.93</td>\n",
       "      <td>0.38</td>\n",
       "      <td>11.93</td>\n",
       "      <td>0.37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">2085-06-01</th>\n",
       "      <th rowspan=\"5\" valign=\"top\">55.20</th>\n",
       "      <th>14.70</th>\n",
       "      <td>23.74</td>\n",
       "      <td>0.72</td>\n",
       "      <td>24.96</td>\n",
       "      <td>0.70</td>\n",
       "      <td>18.65</td>\n",
       "      <td>0.50</td>\n",
       "      <td>19.90</td>\n",
       "      <td>0.44</td>\n",
       "      <td>15.12</td>\n",
       "      <td>0.39</td>\n",
       "      <td>16.34</td>\n",
       "      <td>0.39</td>\n",
       "      <td>22.39</td>\n",
       "      <td>0.73</td>\n",
       "      <td>23.67</td>\n",
       "      <td>0.60</td>\n",
       "      <td>13.17</td>\n",
       "      <td>0.84</td>\n",
       "      <td>14.48</td>\n",
       "      <td>0.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14.80</th>\n",
       "      <td>24.18</td>\n",
       "      <td>0.81</td>\n",
       "      <td>25.41</td>\n",
       "      <td>0.80</td>\n",
       "      <td>18.67</td>\n",
       "      <td>0.50</td>\n",
       "      <td>19.94</td>\n",
       "      <td>0.44</td>\n",
       "      <td>15.05</td>\n",
       "      <td>0.40</td>\n",
       "      <td>16.29</td>\n",
       "      <td>0.39</td>\n",
       "      <td>22.57</td>\n",
       "      <td>0.80</td>\n",
       "      <td>23.87</td>\n",
       "      <td>0.67</td>\n",
       "      <td>12.73</td>\n",
       "      <td>0.84</td>\n",
       "      <td>14.08</td>\n",
       "      <td>0.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14.90</th>\n",
       "      <td>24.30</td>\n",
       "      <td>0.82</td>\n",
       "      <td>25.56</td>\n",
       "      <td>0.80</td>\n",
       "      <td>18.61</td>\n",
       "      <td>0.51</td>\n",
       "      <td>19.91</td>\n",
       "      <td>0.47</td>\n",
       "      <td>14.96</td>\n",
       "      <td>0.41</td>\n",
       "      <td>16.21</td>\n",
       "      <td>0.39</td>\n",
       "      <td>22.57</td>\n",
       "      <td>0.87</td>\n",
       "      <td>23.92</td>\n",
       "      <td>0.73</td>\n",
       "      <td>12.48</td>\n",
       "      <td>0.66</td>\n",
       "      <td>13.86</td>\n",
       "      <td>0.61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15.00</th>\n",
       "      <td>24.22</td>\n",
       "      <td>0.67</td>\n",
       "      <td>25.47</td>\n",
       "      <td>0.65</td>\n",
       "      <td>18.66</td>\n",
       "      <td>0.52</td>\n",
       "      <td>19.96</td>\n",
       "      <td>0.47</td>\n",
       "      <td>15.04</td>\n",
       "      <td>0.42</td>\n",
       "      <td>16.30</td>\n",
       "      <td>0.40</td>\n",
       "      <td>22.55</td>\n",
       "      <td>0.83</td>\n",
       "      <td>23.88</td>\n",
       "      <td>0.66</td>\n",
       "      <td>12.68</td>\n",
       "      <td>0.58</td>\n",
       "      <td>14.04</td>\n",
       "      <td>0.52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15.10</th>\n",
       "      <td>24.11</td>\n",
       "      <td>0.75</td>\n",
       "      <td>25.32</td>\n",
       "      <td>0.69</td>\n",
       "      <td>18.83</td>\n",
       "      <td>0.51</td>\n",
       "      <td>20.10</td>\n",
       "      <td>0.45</td>\n",
       "      <td>15.36</td>\n",
       "      <td>0.40</td>\n",
       "      <td>16.59</td>\n",
       "      <td>0.42</td>\n",
       "      <td>22.49</td>\n",
       "      <td>0.77</td>\n",
       "      <td>23.77</td>\n",
       "      <td>0.63</td>\n",
       "      <td>13.15</td>\n",
       "      <td>0.69</td>\n",
       "      <td>14.48</td>\n",
       "      <td>0.65</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>729100 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                        Summer_Tmax _mean_rcp45 _mean  \\\n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.10 5.70                 24.18             \n",
       "                 5.80                 23.92             \n",
       "                 5.90                 23.34             \n",
       "                 6.00                 22.82             \n",
       "                 6.10                 22.25             \n",
       "...                                     ...             \n",
       "2085-06-01 55.20 14.70                23.74             \n",
       "                 14.80                24.18             \n",
       "                 14.90                24.30             \n",
       "                 15.00                24.22             \n",
       "                 15.10                24.11             \n",
       "\n",
       "                        Summer_Tmax _mean_rcp45 _stdev  \\\n",
       "time       lat   lon                                     \n",
       "1986-06-01 47.10 5.70                  0.20              \n",
       "                 5.80                  0.23              \n",
       "                 5.90                  0.23              \n",
       "                 6.00                  0.20              \n",
       "                 6.10                  0.21              \n",
       "...                                     ...              \n",
       "2085-06-01 55.20 14.70                 0.72              \n",
       "                 14.80                 0.81              \n",
       "                 14.90                 0.82              \n",
       "                 15.00                 0.67              \n",
       "                 15.10                 0.75              \n",
       "\n",
       "                        Summer_Tmax _mean_rcp85 _mean  \\\n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.10 5.70                 24.18             \n",
       "                 5.80                 23.92             \n",
       "                 5.90                 23.34             \n",
       "                 6.00                 22.82             \n",
       "                 6.10                 22.25             \n",
       "...                                     ...             \n",
       "2085-06-01 55.20 14.70                24.96             \n",
       "                 14.80                25.41             \n",
       "                 14.90                25.56             \n",
       "                 15.00                25.47             \n",
       "                 15.10                25.32             \n",
       "\n",
       "                        Summer_Tmax _mean_rcp85 _stdev  \\\n",
       "time       lat   lon                                     \n",
       "1986-06-01 47.10 5.70                  0.19              \n",
       "                 5.80                  0.21              \n",
       "                 5.90                  0.22              \n",
       "                 6.00                  0.18              \n",
       "                 6.10                  0.18              \n",
       "...                                     ...              \n",
       "2085-06-01 55.20 14.70                 0.70              \n",
       "                 14.80                 0.80              \n",
       "                 14.90                 0.80              \n",
       "                 15.00                 0.65              \n",
       "                 15.10                 0.69              \n",
       "\n",
       "                        Summer_Tmea n_mean_rcp4 5_mean  \\\n",
       "time       lat   lon                                     \n",
       "1986-06-01 47.10 5.70                 18.79              \n",
       "                 5.80                 18.59              \n",
       "                 5.90                 18.15              \n",
       "                 6.00                 17.63              \n",
       "                 6.10                 17.12              \n",
       "...                                     ...              \n",
       "2085-06-01 55.20 14.70                18.65              \n",
       "                 14.80                18.67              \n",
       "                 14.90                18.61              \n",
       "                 15.00                18.66              \n",
       "                 15.10                18.83              \n",
       "\n",
       "                        Summer_Tmea n_mean_rcp4 5_stdev  \\\n",
       "time       lat   lon                                      \n",
       "1986-06-01 47.10 5.70                  0.26               \n",
       "                 5.80                  0.27               \n",
       "                 5.90                  0.20               \n",
       "                 6.00                  0.21               \n",
       "                 6.10                  0.22               \n",
       "...                                     ...               \n",
       "2085-06-01 55.20 14.70                 0.50               \n",
       "                 14.80                 0.50               \n",
       "                 14.90                 0.51               \n",
       "                 15.00                 0.52               \n",
       "                 15.10                 0.51               \n",
       "\n",
       "                        Summer_Tmea n_mean_rcp8 5_mean  \\\n",
       "time       lat   lon                                     \n",
       "1986-06-01 47.10 5.70                 18.79              \n",
       "                 5.80                 18.59              \n",
       "                 5.90                 18.15              \n",
       "                 6.00                 17.63              \n",
       "                 6.10                 17.12              \n",
       "...                                     ...              \n",
       "2085-06-01 55.20 14.70                19.90              \n",
       "                 14.80                19.94              \n",
       "                 14.90                19.91              \n",
       "                 15.00                19.96              \n",
       "                 15.10                20.10              \n",
       "\n",
       "                        Summer_Tmea n_mean_rcp8 5_stdev  \\\n",
       "time       lat   lon                                      \n",
       "1986-06-01 47.10 5.70                  0.25               \n",
       "                 5.80                  0.27               \n",
       "                 5.90                  0.20               \n",
       "                 6.00                  0.20               \n",
       "                 6.10                  0.21               \n",
       "...                                     ...               \n",
       "2085-06-01 55.20 14.70                 0.44               \n",
       "                 14.80                 0.44               \n",
       "                 14.90                 0.47               \n",
       "                 15.00                 0.47               \n",
       "                 15.10                 0.45               \n",
       "\n",
       "                        Summer_Tmea n_p10_rcp45 _mean  \\\n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.10 5.70                 14.36             \n",
       "                 5.80                 14.09             \n",
       "                 5.90                 13.62             \n",
       "                 6.00                 13.11             \n",
       "                 6.10                 12.56             \n",
       "...                                     ...             \n",
       "2085-06-01 55.20 14.70                15.12             \n",
       "                 14.80                15.05             \n",
       "                 14.90                14.96             \n",
       "                 15.00                15.04             \n",
       "                 15.10                15.36             \n",
       "\n",
       "                        Summer_Tmea n_p10_rcp45 _stdev  \\\n",
       "time       lat   lon                                     \n",
       "1986-06-01 47.10 5.70                  0.29              \n",
       "                 5.80                  0.28              \n",
       "                 5.90                  0.23              \n",
       "                 6.00                  0.28              \n",
       "                 6.10                  0.27              \n",
       "...                                     ...              \n",
       "2085-06-01 55.20 14.70                 0.39              \n",
       "                 14.80                 0.40              \n",
       "                 14.90                 0.41              \n",
       "                 15.00                 0.42              \n",
       "                 15.10                 0.40              \n",
       "\n",
       "                        Summer_Tmea n_p10_rcp85 _mean  \\\n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.10 5.70                 14.36             \n",
       "                 5.80                 14.09             \n",
       "                 5.90                 13.62             \n",
       "                 6.00                 13.11             \n",
       "                 6.10                 12.56             \n",
       "...                                     ...             \n",
       "2085-06-01 55.20 14.70                16.34             \n",
       "                 14.80                16.29             \n",
       "                 14.90                16.21             \n",
       "                 15.00                16.30             \n",
       "                 15.10                16.59             \n",
       "\n",
       "                        Summer_Tmea n_p10_rcp85 _stdev  \\\n",
       "time       lat   lon                                     \n",
       "1986-06-01 47.10 5.70                  0.29              \n",
       "                 5.80                  0.27              \n",
       "                 5.90                  0.22              \n",
       "                 6.00                  0.27              \n",
       "                 6.10                  0.26              \n",
       "...                                     ...              \n",
       "2085-06-01 55.20 14.70                 0.39              \n",
       "                 14.80                 0.39              \n",
       "                 14.90                 0.39              \n",
       "                 15.00                 0.40              \n",
       "                 15.10                 0.42              \n",
       "\n",
       "                        Summer_Tmea n_p90_rcp45 _mean  \\\n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.10 5.70                 23.32             \n",
       "                 5.80                 23.20             \n",
       "                 5.90                 22.78             \n",
       "                 6.00                 22.23             \n",
       "                 6.10                 21.75             \n",
       "...                                     ...             \n",
       "2085-06-01 55.20 14.70                22.39             \n",
       "                 14.80                22.57             \n",
       "                 14.90                22.57             \n",
       "                 15.00                22.55             \n",
       "                 15.10                22.49             \n",
       "\n",
       "                        Summer_Tmea n_p90_rcp45 _stdev  \\\n",
       "time       lat   lon                                     \n",
       "1986-06-01 47.10 5.70                  0.30              \n",
       "                 5.80                  0.41              \n",
       "                 5.90                  0.37              \n",
       "                 6.00                  0.24              \n",
       "                 6.10                  0.30              \n",
       "...                                     ...              \n",
       "2085-06-01 55.20 14.70                 0.73              \n",
       "                 14.80                 0.80              \n",
       "                 14.90                 0.87              \n",
       "                 15.00                 0.83              \n",
       "                 15.10                 0.77              \n",
       "\n",
       "                        Summer_Tmea n_p90_rcp85 _mean  \\\n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.10 5.70                 23.32             \n",
       "                 5.80                 23.20             \n",
       "                 5.90                 22.78             \n",
       "                 6.00                 22.23             \n",
       "                 6.10                 21.75             \n",
       "...                                     ...             \n",
       "2085-06-01 55.20 14.70                23.67             \n",
       "                 14.80                23.87             \n",
       "                 14.90                23.92             \n",
       "                 15.00                23.88             \n",
       "                 15.10                23.77             \n",
       "\n",
       "                        Summer_Tmea n_p90_rcp85 _stdev  \\\n",
       "time       lat   lon                                     \n",
       "1986-06-01 47.10 5.70                  0.32              \n",
       "                 5.80                  0.45              \n",
       "                 5.90                  0.42              \n",
       "                 6.00                  0.27              \n",
       "                 6.10                  0.33              \n",
       "...                                     ...              \n",
       "2085-06-01 55.20 14.70                 0.60              \n",
       "                 14.80                 0.67              \n",
       "                 14.90                 0.73              \n",
       "                 15.00                 0.66              \n",
       "                 15.10                 0.63              \n",
       "\n",
       "                        Summer_Tmin _mean_rcp45 _mean  \\\n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.10 5.70                 13.35             \n",
       "                 5.80                 13.21             \n",
       "                 5.90                 12.91             \n",
       "                 6.00                 12.38             \n",
       "                 6.10                 11.93             \n",
       "...                                     ...             \n",
       "2085-06-01 55.20 14.70                13.17             \n",
       "                 14.80                12.73             \n",
       "                 14.90                12.48             \n",
       "                 15.00                12.68             \n",
       "                 15.10                13.15             \n",
       "\n",
       "                        Summer_Tmin _mean_rcp45 _stdev  \\\n",
       "time       lat   lon                                     \n",
       "1986-06-01 47.10 5.70                  0.47              \n",
       "                 5.80                  0.41              \n",
       "                 5.90                  0.30              \n",
       "                 6.00                  0.35              \n",
       "                 6.10                  0.38              \n",
       "...                                     ...              \n",
       "2085-06-01 55.20 14.70                 0.84              \n",
       "                 14.80                 0.84              \n",
       "                 14.90                 0.66              \n",
       "                 15.00                 0.58              \n",
       "                 15.10                 0.69              \n",
       "\n",
       "                        Summer_Tmin _mean_rcp85 _mean  \\\n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.10 5.70                 13.35             \n",
       "                 5.80                 13.21             \n",
       "                 5.90                 12.91             \n",
       "                 6.00                 12.38             \n",
       "                 6.10                 11.93             \n",
       "...                                     ...             \n",
       "2085-06-01 55.20 14.70                14.48             \n",
       "                 14.80                14.08             \n",
       "                 14.90                13.86             \n",
       "                 15.00                14.04             \n",
       "                 15.10                14.48             \n",
       "\n",
       "                        Summer_Tmin _mean_rcp85 _stdev  \n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.10 5.70                  0.45             \n",
       "                 5.80                  0.41             \n",
       "                 5.90                  0.30             \n",
       "                 6.00                  0.33             \n",
       "                 6.10                  0.37             \n",
       "...                                     ...             \n",
       "2085-06-01 55.20 14.70                 0.76             \n",
       "                 14.80                 0.75             \n",
       "                 14.90                 0.61             \n",
       "                 15.00                 0.52             \n",
       "                 15.10                 0.65             \n",
       "\n",
       "[729100 rows x 20 columns]"
      ]
     },
     "execution_count": 281,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Define csv filename and filepath for the output\n",
    "csv_filename = f\"{dataset}-{nc_files[0]['ds_period']}.csv.zip\"\n",
    "csv_filepath = os.path.join(csv_folder, csv_filename)\n",
    "\n",
    "# Export the DataFrame as CSV if it does not already exist\n",
    "if not os.path.isfile(csv_filepath):\n",
    "    dataframes = [netcdf_to_dataframe(nc_file) for nc_file in tqdm(nc_files)]\n",
    "    df_merged = pd.concat(dataframes, axis=1).dropna().reset_index()\n",
    "    df_merged.to_csv(csv_filepath, sep=\",\", encoding='utf8', compression='zip', index=False)\n",
    "else:\n",
    "    print(f\"File already exists at {csv_filepath}.\\nSkipping export.\")\n",
    "    print(\"Reading existing CSV file...\")\n",
    "    df_merged = pd.read_csv(csv_filepath)\n",
    "\n",
    "def wrap_column_names(df, width):\n",
    "    wrapped_columns = {col: \" \".join(textwrap.wrap(col, width)) for col in df.columns}\n",
    "    return df.rename(columns=wrapped_columns)\n",
    "\n",
    "# Modify pandas display options\n",
    "pd.options.display.max_colwidth = 20\n",
    "pd.options.display.float_format = '{:,.2f}'.format\n",
    "\n",
    "# Display DataFrame\n",
    "df_wrapped = wrap_column_names(df_merged, width=11)\n",
    "df_wrapped = df_wrapped.set_index(['time', 'lat', 'lon'])\n",
    "df_wrapped"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "95faad41",
   "metadata": {},
   "source": [
    "### 4.2 Filter by Area, Create DataFrame and Export as merged CSV file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 282,
   "id": "2474ba53",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "File already exists at .\\data\\sis-temperature-statistics\\csv\\sis-temperature-statistics-subset-Summer.csv.zip.\n",
      "Skipping export.\n",
      "Reading existing CSV file...\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Summer_Tmax _mean_rcp45 _mean</th>\n",
       "      <th>Summer_Tmax _mean_rcp45 _stdev</th>\n",
       "      <th>Summer_Tmax _mean_rcp85 _mean</th>\n",
       "      <th>Summer_Tmax _mean_rcp85 _stdev</th>\n",
       "      <th>Summer_Tmea n_mean_rcp4 5_mean</th>\n",
       "      <th>Summer_Tmea n_mean_rcp4 5_stdev</th>\n",
       "      <th>Summer_Tmea n_mean_rcp8 5_mean</th>\n",
       "      <th>Summer_Tmea n_mean_rcp8 5_stdev</th>\n",
       "      <th>Summer_Tmea n_p10_rcp45 _mean</th>\n",
       "      <th>Summer_Tmea n_p10_rcp45 _stdev</th>\n",
       "      <th>Summer_Tmea n_p10_rcp85 _mean</th>\n",
       "      <th>Summer_Tmea n_p10_rcp85 _stdev</th>\n",
       "      <th>Summer_Tmea n_p90_rcp45 _mean</th>\n",
       "      <th>Summer_Tmea n_p90_rcp45 _stdev</th>\n",
       "      <th>Summer_Tmea n_p90_rcp85 _mean</th>\n",
       "      <th>Summer_Tmea n_p90_rcp85 _stdev</th>\n",
       "      <th>Summer_Tmin _mean_rcp45 _mean</th>\n",
       "      <th>Summer_Tmin _mean_rcp45 _stdev</th>\n",
       "      <th>Summer_Tmin _mean_rcp85 _mean</th>\n",
       "      <th>Summer_Tmin _mean_rcp85 _stdev</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>time</th>\n",
       "      <th>lat</th>\n",
       "      <th>lon</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">1986-06-01</th>\n",
       "      <th rowspan=\"3\" valign=\"top\">47.60</th>\n",
       "      <th>9.00</th>\n",
       "      <td>23.73</td>\n",
       "      <td>0.43</td>\n",
       "      <td>23.73</td>\n",
       "      <td>0.37</td>\n",
       "      <td>18.57</td>\n",
       "      <td>0.32</td>\n",
       "      <td>18.57</td>\n",
       "      <td>0.27</td>\n",
       "      <td>13.88</td>\n",
       "      <td>0.38</td>\n",
       "      <td>13.88</td>\n",
       "      <td>0.35</td>\n",
       "      <td>23.14</td>\n",
       "      <td>0.34</td>\n",
       "      <td>23.14</td>\n",
       "      <td>0.31</td>\n",
       "      <td>13.26</td>\n",
       "      <td>0.29</td>\n",
       "      <td>13.26</td>\n",
       "      <td>0.27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9.10</th>\n",
       "      <td>23.87</td>\n",
       "      <td>0.44</td>\n",
       "      <td>23.87</td>\n",
       "      <td>0.38</td>\n",
       "      <td>18.73</td>\n",
       "      <td>0.33</td>\n",
       "      <td>18.73</td>\n",
       "      <td>0.28</td>\n",
       "      <td>14.02</td>\n",
       "      <td>0.40</td>\n",
       "      <td>14.02</td>\n",
       "      <td>0.37</td>\n",
       "      <td>23.31</td>\n",
       "      <td>0.36</td>\n",
       "      <td>23.31</td>\n",
       "      <td>0.33</td>\n",
       "      <td>13.43</td>\n",
       "      <td>0.29</td>\n",
       "      <td>13.43</td>\n",
       "      <td>0.26</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9.20</th>\n",
       "      <td>23.82</td>\n",
       "      <td>0.37</td>\n",
       "      <td>23.82</td>\n",
       "      <td>0.32</td>\n",
       "      <td>18.77</td>\n",
       "      <td>0.28</td>\n",
       "      <td>18.77</td>\n",
       "      <td>0.24</td>\n",
       "      <td>14.09</td>\n",
       "      <td>0.36</td>\n",
       "      <td>14.09</td>\n",
       "      <td>0.33</td>\n",
       "      <td>23.31</td>\n",
       "      <td>0.35</td>\n",
       "      <td>23.31</td>\n",
       "      <td>0.34</td>\n",
       "      <td>13.51</td>\n",
       "      <td>0.23</td>\n",
       "      <td>13.51</td>\n",
       "      <td>0.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">47.70</th>\n",
       "      <th>9.00</th>\n",
       "      <td>23.96</td>\n",
       "      <td>0.31</td>\n",
       "      <td>23.96</td>\n",
       "      <td>0.26</td>\n",
       "      <td>18.74</td>\n",
       "      <td>0.24</td>\n",
       "      <td>18.74</td>\n",
       "      <td>0.20</td>\n",
       "      <td>14.06</td>\n",
       "      <td>0.32</td>\n",
       "      <td>14.06</td>\n",
       "      <td>0.31</td>\n",
       "      <td>23.23</td>\n",
       "      <td>0.26</td>\n",
       "      <td>23.23</td>\n",
       "      <td>0.24</td>\n",
       "      <td>13.35</td>\n",
       "      <td>0.30</td>\n",
       "      <td>13.35</td>\n",
       "      <td>0.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9.10</th>\n",
       "      <td>24.20</td>\n",
       "      <td>0.36</td>\n",
       "      <td>24.20</td>\n",
       "      <td>0.30</td>\n",
       "      <td>18.96</td>\n",
       "      <td>0.29</td>\n",
       "      <td>18.96</td>\n",
       "      <td>0.25</td>\n",
       "      <td>14.27</td>\n",
       "      <td>0.36</td>\n",
       "      <td>14.27</td>\n",
       "      <td>0.34</td>\n",
       "      <td>23.49</td>\n",
       "      <td>0.32</td>\n",
       "      <td>23.49</td>\n",
       "      <td>0.28</td>\n",
       "      <td>13.56</td>\n",
       "      <td>0.31</td>\n",
       "      <td>13.56</td>\n",
       "      <td>0.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"5\" valign=\"top\">2085-06-01</th>\n",
       "      <th rowspan=\"2\" valign=\"top\">47.70</th>\n",
       "      <th>9.10</th>\n",
       "      <td>26.26</td>\n",
       "      <td>0.84</td>\n",
       "      <td>28.28</td>\n",
       "      <td>1.35</td>\n",
       "      <td>21.07</td>\n",
       "      <td>0.66</td>\n",
       "      <td>23.01</td>\n",
       "      <td>1.02</td>\n",
       "      <td>16.06</td>\n",
       "      <td>0.68</td>\n",
       "      <td>17.39</td>\n",
       "      <td>0.80</td>\n",
       "      <td>26.01</td>\n",
       "      <td>0.61</td>\n",
       "      <td>28.38</td>\n",
       "      <td>1.22</td>\n",
       "      <td>15.73</td>\n",
       "      <td>0.57</td>\n",
       "      <td>17.64</td>\n",
       "      <td>0.73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9.20</th>\n",
       "      <td>26.31</td>\n",
       "      <td>0.84</td>\n",
       "      <td>28.32</td>\n",
       "      <td>1.34</td>\n",
       "      <td>21.17</td>\n",
       "      <td>0.68</td>\n",
       "      <td>23.10</td>\n",
       "      <td>1.03</td>\n",
       "      <td>16.15</td>\n",
       "      <td>0.68</td>\n",
       "      <td>17.49</td>\n",
       "      <td>0.80</td>\n",
       "      <td>26.11</td>\n",
       "      <td>0.63</td>\n",
       "      <td>28.48</td>\n",
       "      <td>1.23</td>\n",
       "      <td>15.89</td>\n",
       "      <td>0.59</td>\n",
       "      <td>17.79</td>\n",
       "      <td>0.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"3\" valign=\"top\">47.80</th>\n",
       "      <th>9.00</th>\n",
       "      <td>24.98</td>\n",
       "      <td>0.69</td>\n",
       "      <td>27.00</td>\n",
       "      <td>1.19</td>\n",
       "      <td>20.16</td>\n",
       "      <td>0.63</td>\n",
       "      <td>22.11</td>\n",
       "      <td>0.92</td>\n",
       "      <td>15.28</td>\n",
       "      <td>0.67</td>\n",
       "      <td>16.63</td>\n",
       "      <td>0.74</td>\n",
       "      <td>24.98</td>\n",
       "      <td>0.64</td>\n",
       "      <td>27.33</td>\n",
       "      <td>1.14</td>\n",
       "      <td>15.24</td>\n",
       "      <td>0.78</td>\n",
       "      <td>17.14</td>\n",
       "      <td>0.86</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9.10</th>\n",
       "      <td>25.38</td>\n",
       "      <td>0.68</td>\n",
       "      <td>27.41</td>\n",
       "      <td>1.14</td>\n",
       "      <td>20.35</td>\n",
       "      <td>0.59</td>\n",
       "      <td>22.29</td>\n",
       "      <td>0.87</td>\n",
       "      <td>15.39</td>\n",
       "      <td>0.65</td>\n",
       "      <td>16.73</td>\n",
       "      <td>0.71</td>\n",
       "      <td>25.21</td>\n",
       "      <td>0.62</td>\n",
       "      <td>27.59</td>\n",
       "      <td>1.06</td>\n",
       "      <td>15.19</td>\n",
       "      <td>0.63</td>\n",
       "      <td>17.09</td>\n",
       "      <td>0.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9.20</th>\n",
       "      <td>25.37</td>\n",
       "      <td>0.64</td>\n",
       "      <td>27.38</td>\n",
       "      <td>1.09</td>\n",
       "      <td>20.30</td>\n",
       "      <td>0.54</td>\n",
       "      <td>22.22</td>\n",
       "      <td>0.81</td>\n",
       "      <td>15.33</td>\n",
       "      <td>0.61</td>\n",
       "      <td>16.68</td>\n",
       "      <td>0.67</td>\n",
       "      <td>25.16</td>\n",
       "      <td>0.60</td>\n",
       "      <td>27.52</td>\n",
       "      <td>0.99</td>\n",
       "      <td>15.11</td>\n",
       "      <td>0.52</td>\n",
       "      <td>16.98</td>\n",
       "      <td>0.63</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>900 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                       Summer_Tmax _mean_rcp45 _mean  \\\n",
       "time       lat   lon                                   \n",
       "1986-06-01 47.60 9.00                23.73             \n",
       "                 9.10                23.87             \n",
       "                 9.20                23.82             \n",
       "           47.70 9.00                23.96             \n",
       "                 9.10                24.20             \n",
       "...                                    ...             \n",
       "2085-06-01 47.70 9.10                26.26             \n",
       "                 9.20                26.31             \n",
       "           47.80 9.00                24.98             \n",
       "                 9.10                25.38             \n",
       "                 9.20                25.37             \n",
       "\n",
       "                       Summer_Tmax _mean_rcp45 _stdev  \\\n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.60 9.00                 0.43              \n",
       "                 9.10                 0.44              \n",
       "                 9.20                 0.37              \n",
       "           47.70 9.00                 0.31              \n",
       "                 9.10                 0.36              \n",
       "...                                    ...              \n",
       "2085-06-01 47.70 9.10                 0.84              \n",
       "                 9.20                 0.84              \n",
       "           47.80 9.00                 0.69              \n",
       "                 9.10                 0.68              \n",
       "                 9.20                 0.64              \n",
       "\n",
       "                       Summer_Tmax _mean_rcp85 _mean  \\\n",
       "time       lat   lon                                   \n",
       "1986-06-01 47.60 9.00                23.73             \n",
       "                 9.10                23.87             \n",
       "                 9.20                23.82             \n",
       "           47.70 9.00                23.96             \n",
       "                 9.10                24.20             \n",
       "...                                    ...             \n",
       "2085-06-01 47.70 9.10                28.28             \n",
       "                 9.20                28.32             \n",
       "           47.80 9.00                27.00             \n",
       "                 9.10                27.41             \n",
       "                 9.20                27.38             \n",
       "\n",
       "                       Summer_Tmax _mean_rcp85 _stdev  \\\n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.60 9.00                 0.37              \n",
       "                 9.10                 0.38              \n",
       "                 9.20                 0.32              \n",
       "           47.70 9.00                 0.26              \n",
       "                 9.10                 0.30              \n",
       "...                                    ...              \n",
       "2085-06-01 47.70 9.10                 1.35              \n",
       "                 9.20                 1.34              \n",
       "           47.80 9.00                 1.19              \n",
       "                 9.10                 1.14              \n",
       "                 9.20                 1.09              \n",
       "\n",
       "                       Summer_Tmea n_mean_rcp4 5_mean  \\\n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.60 9.00                18.57              \n",
       "                 9.10                18.73              \n",
       "                 9.20                18.77              \n",
       "           47.70 9.00                18.74              \n",
       "                 9.10                18.96              \n",
       "...                                    ...              \n",
       "2085-06-01 47.70 9.10                21.07              \n",
       "                 9.20                21.17              \n",
       "           47.80 9.00                20.16              \n",
       "                 9.10                20.35              \n",
       "                 9.20                20.30              \n",
       "\n",
       "                       Summer_Tmea n_mean_rcp4 5_stdev  \\\n",
       "time       lat   lon                                     \n",
       "1986-06-01 47.60 9.00                 0.32               \n",
       "                 9.10                 0.33               \n",
       "                 9.20                 0.28               \n",
       "           47.70 9.00                 0.24               \n",
       "                 9.10                 0.29               \n",
       "...                                    ...               \n",
       "2085-06-01 47.70 9.10                 0.66               \n",
       "                 9.20                 0.68               \n",
       "           47.80 9.00                 0.63               \n",
       "                 9.10                 0.59               \n",
       "                 9.20                 0.54               \n",
       "\n",
       "                       Summer_Tmea n_mean_rcp8 5_mean  \\\n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.60 9.00                18.57              \n",
       "                 9.10                18.73              \n",
       "                 9.20                18.77              \n",
       "           47.70 9.00                18.74              \n",
       "                 9.10                18.96              \n",
       "...                                    ...              \n",
       "2085-06-01 47.70 9.10                23.01              \n",
       "                 9.20                23.10              \n",
       "           47.80 9.00                22.11              \n",
       "                 9.10                22.29              \n",
       "                 9.20                22.22              \n",
       "\n",
       "                       Summer_Tmea n_mean_rcp8 5_stdev  \\\n",
       "time       lat   lon                                     \n",
       "1986-06-01 47.60 9.00                 0.27               \n",
       "                 9.10                 0.28               \n",
       "                 9.20                 0.24               \n",
       "           47.70 9.00                 0.20               \n",
       "                 9.10                 0.25               \n",
       "...                                    ...               \n",
       "2085-06-01 47.70 9.10                 1.02               \n",
       "                 9.20                 1.03               \n",
       "           47.80 9.00                 0.92               \n",
       "                 9.10                 0.87               \n",
       "                 9.20                 0.81               \n",
       "\n",
       "                       Summer_Tmea n_p10_rcp45 _mean  \\\n",
       "time       lat   lon                                   \n",
       "1986-06-01 47.60 9.00                13.88             \n",
       "                 9.10                14.02             \n",
       "                 9.20                14.09             \n",
       "           47.70 9.00                14.06             \n",
       "                 9.10                14.27             \n",
       "...                                    ...             \n",
       "2085-06-01 47.70 9.10                16.06             \n",
       "                 9.20                16.15             \n",
       "           47.80 9.00                15.28             \n",
       "                 9.10                15.39             \n",
       "                 9.20                15.33             \n",
       "\n",
       "                       Summer_Tmea n_p10_rcp45 _stdev  \\\n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.60 9.00                 0.38              \n",
       "                 9.10                 0.40              \n",
       "                 9.20                 0.36              \n",
       "           47.70 9.00                 0.32              \n",
       "                 9.10                 0.36              \n",
       "...                                    ...              \n",
       "2085-06-01 47.70 9.10                 0.68              \n",
       "                 9.20                 0.68              \n",
       "           47.80 9.00                 0.67              \n",
       "                 9.10                 0.65              \n",
       "                 9.20                 0.61              \n",
       "\n",
       "                       Summer_Tmea n_p10_rcp85 _mean  \\\n",
       "time       lat   lon                                   \n",
       "1986-06-01 47.60 9.00                13.88             \n",
       "                 9.10                14.02             \n",
       "                 9.20                14.09             \n",
       "           47.70 9.00                14.06             \n",
       "                 9.10                14.27             \n",
       "...                                    ...             \n",
       "2085-06-01 47.70 9.10                17.39             \n",
       "                 9.20                17.49             \n",
       "           47.80 9.00                16.63             \n",
       "                 9.10                16.73             \n",
       "                 9.20                16.68             \n",
       "\n",
       "                       Summer_Tmea n_p10_rcp85 _stdev  \\\n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.60 9.00                 0.35              \n",
       "                 9.10                 0.37              \n",
       "                 9.20                 0.33              \n",
       "           47.70 9.00                 0.31              \n",
       "                 9.10                 0.34              \n",
       "...                                    ...              \n",
       "2085-06-01 47.70 9.10                 0.80              \n",
       "                 9.20                 0.80              \n",
       "           47.80 9.00                 0.74              \n",
       "                 9.10                 0.71              \n",
       "                 9.20                 0.67              \n",
       "\n",
       "                       Summer_Tmea n_p90_rcp45 _mean  \\\n",
       "time       lat   lon                                   \n",
       "1986-06-01 47.60 9.00                23.14             \n",
       "                 9.10                23.31             \n",
       "                 9.20                23.31             \n",
       "           47.70 9.00                23.23             \n",
       "                 9.10                23.49             \n",
       "...                                    ...             \n",
       "2085-06-01 47.70 9.10                26.01             \n",
       "                 9.20                26.11             \n",
       "           47.80 9.00                24.98             \n",
       "                 9.10                25.21             \n",
       "                 9.20                25.16             \n",
       "\n",
       "                       Summer_Tmea n_p90_rcp45 _stdev  \\\n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.60 9.00                 0.34              \n",
       "                 9.10                 0.36              \n",
       "                 9.20                 0.35              \n",
       "           47.70 9.00                 0.26              \n",
       "                 9.10                 0.32              \n",
       "...                                    ...              \n",
       "2085-06-01 47.70 9.10                 0.61              \n",
       "                 9.20                 0.63              \n",
       "           47.80 9.00                 0.64              \n",
       "                 9.10                 0.62              \n",
       "                 9.20                 0.60              \n",
       "\n",
       "                       Summer_Tmea n_p90_rcp85 _mean  \\\n",
       "time       lat   lon                                   \n",
       "1986-06-01 47.60 9.00                23.14             \n",
       "                 9.10                23.31             \n",
       "                 9.20                23.31             \n",
       "           47.70 9.00                23.23             \n",
       "                 9.10                23.49             \n",
       "...                                    ...             \n",
       "2085-06-01 47.70 9.10                28.38             \n",
       "                 9.20                28.48             \n",
       "           47.80 9.00                27.33             \n",
       "                 9.10                27.59             \n",
       "                 9.20                27.52             \n",
       "\n",
       "                       Summer_Tmea n_p90_rcp85 _stdev  \\\n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.60 9.00                 0.31              \n",
       "                 9.10                 0.33              \n",
       "                 9.20                 0.34              \n",
       "           47.70 9.00                 0.24              \n",
       "                 9.10                 0.28              \n",
       "...                                    ...              \n",
       "2085-06-01 47.70 9.10                 1.22              \n",
       "                 9.20                 1.23              \n",
       "           47.80 9.00                 1.14              \n",
       "                 9.10                 1.06              \n",
       "                 9.20                 0.99              \n",
       "\n",
       "                       Summer_Tmin _mean_rcp45 _mean  \\\n",
       "time       lat   lon                                   \n",
       "1986-06-01 47.60 9.00                13.26             \n",
       "                 9.10                13.43             \n",
       "                 9.20                13.51             \n",
       "           47.70 9.00                13.35             \n",
       "                 9.10                13.56             \n",
       "...                                    ...             \n",
       "2085-06-01 47.70 9.10                15.73             \n",
       "                 9.20                15.89             \n",
       "           47.80 9.00                15.24             \n",
       "                 9.10                15.19             \n",
       "                 9.20                15.11             \n",
       "\n",
       "                       Summer_Tmin _mean_rcp45 _stdev  \\\n",
       "time       lat   lon                                    \n",
       "1986-06-01 47.60 9.00                 0.29              \n",
       "                 9.10                 0.29              \n",
       "                 9.20                 0.23              \n",
       "           47.70 9.00                 0.30              \n",
       "                 9.10                 0.31              \n",
       "...                                    ...              \n",
       "2085-06-01 47.70 9.10                 0.57              \n",
       "                 9.20                 0.59              \n",
       "           47.80 9.00                 0.78              \n",
       "                 9.10                 0.63              \n",
       "                 9.20                 0.52              \n",
       "\n",
       "                       Summer_Tmin _mean_rcp85 _mean  \\\n",
       "time       lat   lon                                   \n",
       "1986-06-01 47.60 9.00                13.26             \n",
       "                 9.10                13.43             \n",
       "                 9.20                13.51             \n",
       "           47.70 9.00                13.35             \n",
       "                 9.10                13.56             \n",
       "...                                    ...             \n",
       "2085-06-01 47.70 9.10                17.64             \n",
       "                 9.20                17.79             \n",
       "           47.80 9.00                17.14             \n",
       "                 9.10                17.09             \n",
       "                 9.20                16.98             \n",
       "\n",
       "                       Summer_Tmin _mean_rcp85 _stdev  \n",
       "time       lat   lon                                   \n",
       "1986-06-01 47.60 9.00                 0.27             \n",
       "                 9.10                 0.26             \n",
       "                 9.20                 0.21             \n",
       "           47.70 9.00                 0.29             \n",
       "                 9.10                 0.29             \n",
       "...                                    ...             \n",
       "2085-06-01 47.70 9.10                 0.73             \n",
       "                 9.20                 0.76             \n",
       "           47.80 9.00                 0.86             \n",
       "                 9.10                 0.72             \n",
       "                 9.20                 0.63             \n",
       "\n",
       "[900 rows x 20 columns]"
      ]
     },
     "execution_count": 282,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Define additional request fields to ensure the request stays within the file size limit.\n",
    "# These coordinates were obtained using the BBox Extractor tool:\n",
    "# https://str-ucture.github.io/bbox-extractor/\n",
    "\n",
    "# Bounding box for the Konstanz region (WGS84 projection):\n",
    "bbox_wgs84_konstanz = [47.9, 8.9, 47.6, 9.3]  # Format: [North, West, South, East]\n",
    "bbox_wgs84_konstanz_standard = [9.0, 47.6, 9.3, 47.8]  # Standard format: [West, South, East, North]\n",
    "\n",
    "# Define csv filename and filepath for the output\n",
    "csv_filename = f\"{dataset}-subset-{nc_files[0]['ds_period']}.csv.zip\"\n",
    "csv_filepath = os.path.join(csv_folder, csv_filename)\n",
    "\n",
    "# Export the DataFrame as CSV if it does not already exist\n",
    "if not os.path.isfile(csv_filepath):\n",
    "    dataframes = [netcdf_to_dataframe(nc_file, bounding_box=bbox_wgs84_konstanz_standard) for nc_file in tqdm(nc_files)]\n",
    "    df_merged_subset = pd.concat(dataframes, axis=1).dropna().reset_index()\n",
    "    df_merged_subset.to_csv(csv_filepath, sep=\",\", encoding='utf8', compression='zip', index=False)\n",
    "else:\n",
    "    print(f\"File already exists at {csv_filepath}.\\nSkipping export.\")\n",
    "    print(\"Reading existing CSV file...\")\n",
    "    df_merged_subset = pd.read_csv(csv_filepath)\n",
    "\n",
    "def wrap_column_names(df, width):\n",
    "    wrapped_columns = {col: \" \".join(textwrap.wrap(col, width)) for col in df.columns}\n",
    "    return df.rename(columns=wrapped_columns)\n",
    "\n",
    "# Modify pandas display options\n",
    "pd.options.display.max_colwidth = 20\n",
    "pd.options.display.float_format = '{:,.2f}'.format\n",
    "\n",
    "# Display DataFrame\n",
    "df_wrapped_subset = wrap_column_names(df_merged_subset, width=11)\n",
    "df_wrapped_subset = df_wrapped_subset.set_index(['time', 'lat', 'lon'])\n",
    "df_wrapped_subset"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "de15e521",
   "metadata": {},
   "source": [
    "## 5. Export Dataset to GeoTIFF"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e997a3d4",
   "metadata": {},
   "source": [
    "### 5.1 Function to exort the Dataset as GeoTIFF File(s)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 283,
   "id": "f4c38a88",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from rasterio.transform import from_origin\n",
    "import rasterio\n",
    "\n",
    "from tqdm.notebook import tqdm\n",
    "\n",
    "def main_export_geotiff(\n",
    "    nc_file,\n",
    "    bounding_box=None,\n",
    "    start_year=None,\n",
    "    end_year=None,\n",
    "    merged=None,\n",
    "    output_directory=None):\n",
    "    \n",
    "    \"\"\"\n",
    "    Export the entire multi-year dataset or a specified range as a single merged GeoTIFF file.\n",
    "\n",
    "    Parameters:\n",
    "        nc_file (dict): A dictionary with keys 'path' (file path), 'variable', 'rcp', and 'statistic'.\n",
    "        bounding_box (list): [lon_min, lat_min, lon_max, lat_max] (optional).\n",
    "        start_year (int): Starting year for the dataset (optional).\n",
    "        end_year (int): Ending year for the dataset (optional).\n",
    "        merged (bool): Whether to generate merged GeoTIFF or individual GeoTIFFs (optional).\n",
    "        output_directory (str): Directory to save the output GeoTIFF files (optional).\n",
    "    \"\"\"\n",
    "    \n",
    "    # Open the netCDF file\n",
    "    with nc.Dataset(nc_file['path'], 'r') as nc_dataset:\n",
    "        nc_dataset = nc.Dataset(nc_file['path'], 'r')\n",
    "        lon = nc_dataset['lon'][:]\n",
    "        lat = nc_dataset['lat'][:]\n",
    "                    \n",
    "        # Filter by bounding box if provided\n",
    "        if bounding_box:\n",
    "            lon_min, lat_min, lon_max, lat_max = bounding_box\n",
    "            \n",
    "            indices_lat = np.where((lat >= lat_min) & (lat <= lat_max))[0]\n",
    "            indices_lon = np.where((lon >= lon_min) & (lon <= lon_max))[0]\n",
    "            start_lat, end_lat = indices_lat[0], indices_lat[-1] + 1\n",
    "            start_lon, end_lon = indices_lon[0], indices_lon[-1] + 1\n",
    "        else:\n",
    "            start_lat, end_lat = 0, len(lat)\n",
    "            start_lon, end_lon = 0, len(lon)\n",
    "        \n",
    "        lat = lat[start_lat:end_lat]\n",
    "        lon = lon[start_lon:end_lon]\n",
    "            \n",
    "        # Extract time variable and convert it to readable dates\n",
    "        time_var = nc_dataset.variables['time']\n",
    "        time_units = time_var.units\n",
    "        time_calendar = getattr(time_var, \"calendar\", \"standard\")\n",
    "        cftime = nc.num2date(time_var[:], units=time_units, calendar=time_calendar)\n",
    "        \n",
    "        # Compute spatial resolution and raster transformation\n",
    "        dx = abs(lon[1] - lon[0])\n",
    "        dy = abs(lat[1] - lat[0])\n",
    "        transform = from_origin(lon.min() - dx / 2, lat.min() - dy / 2, dx, -dy)\n",
    "            \n",
    "        # Determine the time range\n",
    "        min_year = cftime[0].year\n",
    "        max_year = cftime[-1].year\n",
    "\n",
    "        if start_year and end_year:\n",
    "            # Adjust start_year and end_year based on the available cftime range\n",
    "            if start_year < min_year:\n",
    "                print(f\"Provided start year {start_year} is earlier than the dataset range. Adjusting start year to {min_year}.\")\n",
    "            if end_year > max_year:\n",
    "                print(f\"Provided end year {end_year} is later than the dataset range. Adjusting end year to {max_year}.\")\n",
    "            start_year = max(start_year, min_year)\n",
    "            end_year = min(end_year, max_year)\n",
    "\n",
    "            dt_full_start = start_year\n",
    "            dt_full_end = end_year\n",
    "        else:\n",
    "            # Default to the full dataset\n",
    "            dt_full_start = min_year\n",
    "            dt_full_end = max_year\n",
    "            start_year = min_year\n",
    "            end_year = max_year\n",
    "            \n",
    "        # Find indices corresponding to the specified year range\n",
    "        start_index = next(i for i, dt in enumerate(cftime) if dt.year == start_year)\n",
    "        end_index = next(i for i, dt in enumerate(cftime) if dt.year == end_year) + 1 # Year\n",
    "        \n",
    "        # Extract temperature/variable data\n",
    "        variable_data = nc_dataset.variables[nc_file['variable_name']]\n",
    "        variable_data_subset = variable_data[start_index:end_index,\n",
    "                                            start_lat:end_lat,\n",
    "                                            start_lon:end_lon]\n",
    "        \n",
    "        # Create subset directory name based on the nc_file\n",
    "        nc_filename = f\"{nc_file['ds_statistic']}_{nc_file['ds_variable']}_{nc_file['ds_period']}_{nc_file['rcp']}_{nc_file['rcp_statistic']}\"\n",
    "        if f\"{nc_file['ds_variable']}\" == \"Tmax\":\n",
    "            period_sub_directory = \"Maximum temperature\"\n",
    "        elif f\"{nc_file['ds_variable']}\" == \"Tmean\":\n",
    "            period_sub_directory = \"Average temperature\"\n",
    "        elif f\"{nc_file['ds_variable']}\" == \"Tmin\":\n",
    "            period_sub_directory = \"Minimum temperature\"\n",
    "            \n",
    "        if merged:\n",
    "            # Create a merged GeoTIFF containing all time slices as separate bands\n",
    "            if output_directory:\n",
    "                save_directory_path = output_directory\n",
    "            else:\n",
    "                subset_directory_path = os.path.join(geotiff_folder, f\"{nc_file['ds_period']}-merged\")\n",
    "                os.makedirs(subset_directory_path, exist_ok=True)\n",
    "                save_directory_path = os.path.join(subset_directory_path, period_sub_directory)\n",
    "                os.makedirs(save_directory_path, exist_ok=True)\n",
    "\n",
    "            output_filename = f\"{nc_filename}-merged-{dt_full_start}-{dt_full_end}.tif\"\n",
    "            output_filepath = os.path.join(save_directory_path, output_filename)\n",
    "\n",
    "            # Create a GeoTIFF with multiple bands for each time slice\n",
    "            with rasterio.open(\n",
    "                output_filepath,\n",
    "                \"w\",\n",
    "                driver = \"GTiff\",\n",
    "                dtype = str(variable_data_subset.dtype),\n",
    "                width = variable_data_subset.shape[2],\n",
    "                height = variable_data_subset.shape[1],\n",
    "                count = variable_data_subset.shape[0],\n",
    "                crs = \"EPSG:4326\",\n",
    "                nodata = -9999,\n",
    "                transform=transform,        \n",
    "            ) as dst:\n",
    "                for year_index in tqdm(range(variable_data_subset.shape[0]),\n",
    "                                    desc=f\"Exporting merged GeoTIFF file from {start_year} to {end_year}\"):\n",
    "                    band_data = variable_data_subset[year_index,:,:]\n",
    "                    dt = cftime[start_index + year_index]\n",
    "                    band_desc = f\"{dt.year:04d}-{dt.month:02d}-{dt.day:02d}\"\n",
    "                    \n",
    "                    # Write each year slice as a band\n",
    "                    dst.write(band_data, year_index + 1)\n",
    "                    dst.set_band_description(year_index + 1, band_desc)\n",
    "                    \n",
    "        else:\n",
    "            if output_directory:\n",
    "                save_directory_path = output_directory\n",
    "            else:\n",
    "                subset_directory_path = os.path.join(geotiff_folder, f\"{nc_file['ds_period']}-individual\")\n",
    "                os.makedirs(subset_directory_path, exist_ok=True)\n",
    "                save_directory_path = os.path.join(subset_directory_path, period_sub_directory)\n",
    "                os.makedirs(save_directory_path, exist_ok=True)\n",
    "            \n",
    "            for year_index in tqdm(range(variable_data_subset.shape[0]),\n",
    "                                desc=\"Exporting individual GeoTIFF files\"):\n",
    "                # Retrieve the date for the current time slice\n",
    "                dt = cftime[start_index + year_index]\n",
    "                dt_full = f\"{dt.year:04d}-{dt.month:02d}-{dt.day:02d}\"\n",
    "\n",
    "                # Define the output GeoTIFF file path            \n",
    "                output_filename = f\"{nc_filename}_{dt_full}.tif\"\n",
    "                output_filepath = os.path.join(save_directory_path, output_filename)\n",
    "\n",
    "                # Export the current time slice as a GeoTIFF\n",
    "                with rasterio.open(\n",
    "                    output_filepath,\n",
    "                    \"w\",\n",
    "                    driver=\"GTiff\",\n",
    "                    dtype=str(variable_data_subset.dtype),\n",
    "                    width=variable_data_subset.shape[2],\n",
    "                    height=variable_data_subset.shape[1],\n",
    "                    count=1,\n",
    "                    crs=\"EPSG:4326\",\n",
    "                    nodata=-9999,\n",
    "                    transform=transform,\n",
    "                ) as dst:\n",
    "                    year_precipitation_data = variable_data_subset[year_index, :, :]\n",
    "                    dst.write(year_precipitation_data, 1)\n",
    "                    dst.set_band_description(1, f\"{dt.year:04d}-{dt.month:02d}-{dt.day:02d}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ca1edc32",
   "metadata": {},
   "source": [
    "### 5.2 Export selected dataset to GeoTIFF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "32a97a95",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Specify the year range to filter and combine data into a single GeoTIFF.\n",
    "# If no range is provided, the full dataset will be used.\n",
    "# If same start and end year is used for export, then old GeoTIFF file will be replaced.\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    # Export all merged\n",
    "    for nc_file in nc_files:\n",
    "        main_export_geotiff(nc_file=nc_file,\n",
    "                            bounding_box=None,\n",
    "                            merged=True) # Merged GeoTIFF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "9b4d2f72",
   "metadata": {},
   "outputs": [],
   "source": [
    "# # Uncomment and run this code to save individual GeoTIFF files\n",
    "\n",
    "# if __name__ == \"__main__\":\n",
    "#     # Export all individual\n",
    "#     for nc_file in nc_files:\n",
    "#         main_export_geotiff(nc_file=nc_file,\n",
    "#                             bounding_box=None,\n",
    "#                             merged=False) # Individual GeoTIFF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4c287898",
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == \"__main__\":\n",
    "    # Additional case (Advanced filtering)\n",
    "    temp_folder = os.path.join(geotiff_folder, \"_temp_folder\")\n",
    "    os.makedirs(temp_folder, exist_ok=True)\n",
    "    \n",
    "    main_export_geotiff(nc_file=nc_file,\n",
    "                        bounding_box=bbox_wgs84_konstanz_standard,\n",
    "                        start_year=2000,\n",
    "                        end_year=2020,\n",
    "                        merged=True,\n",
    "                        output_directory=temp_folder) # Merged, Date filtered and Area filtered"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e9ca739c",
   "metadata": {},
   "source": [
    "## 6. Plot using Matplotlib"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "be67151e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "lon_min, lat_min, lon_max, lat_max = bbox_wgs84_konstanz_standard\n",
    "\n",
    "# Filter the dataframe with query\n",
    "filtered_df = (\n",
    "    df_merged.query(\n",
    "        \"@lat_min <= latitude <= @lat_max and @lon_min <= longitude <= @lon_max\"\n",
    "    )\n",
    "    .reset_index()\n",
    "    .set_index(\"time\")\n",
    ")\n",
    "\n",
    "# Display DataFrame\n",
    "df_wrapped = wrap_column_names(filtered_df, width=11)\n",
    "df_wrapped.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7eb6b494",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Group by the 'time' index and calculate the mean for each group\n",
    "filtered_df_average = filtered_df.groupby(level='time').mean()\n",
    "filtered_df_average = filtered_df_average.drop(columns=['latitude', 'longitude'])\n",
    "\n",
    "# Display DataFrame\n",
    "df_wrapped = wrap_column_names(filtered_df_average, width=11)\n",
    "df_wrapped"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "86395a95",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import matplotlib.ticker as ticker\n",
    "\n",
    "def plot_with_shaded_area(ax, x, y_mean, y_stdev, line_color, fill_color, line_label, fill_label, marker_style):\n",
    "    \"\"\"Helper function to plot mean lines with shaded area.\"\"\"\n",
    "    ax.plot(x, y_mean, color=line_color, label=line_label, marker=marker_style, markevery=5, linestyle='--')\n",
    "    ax.fill_between(x, y_mean - y_stdev, y_mean + y_stdev, color=fill_color, alpha=0.3, label=fill_label)\n",
    "\n",
    "def plot_line_and_shade(filtered_df_average, variable_name_list):\n",
    "    # Create the plot\n",
    "    fig, ax = plt.subplots(figsize=(13, 7), facecolor='#f1f1f1', edgecolor='k')\n",
    "\n",
    "    y_max_list = []\n",
    "    y_min_list = []\n",
    "    for variable_name in variable_name_list:\n",
    "    # Create the plot:\n",
    "        # Plot data for rcp45\n",
    "        plot_with_shaded_area(\n",
    "            ax=ax,\n",
    "            x=filtered_df_average.index,\n",
    "            y_mean=filtered_df_average[f\"{variable_name}_rcp45_mean\"],\n",
    "            y_stdev=filtered_df_average[f\"{variable_name}_rcp45_stdev\"],\n",
    "            line_color='#1f77b4',\n",
    "            fill_color='#aec7e8',\n",
    "            line_label=f\"{variable_name}_rcp45_mean\",\n",
    "            fill_label=f\"{variable_name}_rcp45_stdev\",\n",
    "            marker_style=None\n",
    "        )\n",
    "\n",
    "        # Plot data for rcp85\n",
    "        plot_with_shaded_area(\n",
    "            ax=ax,\n",
    "            x=filtered_df_average.index,\n",
    "            y_mean=filtered_df_average[f\"{variable_name}_rcp85_mean\"],\n",
    "            y_stdev=filtered_df_average[f\"{variable_name}_rcp85_stdev\"],\n",
    "            line_color='#ff7f0e',\n",
    "            fill_color='#ffbb78',\n",
    "            line_label=f\"{variable_name}_rcp85_mean\",\n",
    "            fill_label=f\"{variable_name}_rcp85_stdev\",\n",
    "            marker_style=None\n",
    "        )\n",
    "        \n",
    "        # Interval\n",
    "        interval = 1\n",
    "\n",
    "        # Set the Y-axis range dynamically\n",
    "        rcp45_min = filtered_df_average[f\"{variable_name}_rcp45_mean\"].min() - filtered_df_average[f\"{variable_name}_rcp45_stdev\"].max()\n",
    "        rcp85_min = filtered_df_average[f\"{variable_name}_rcp85_mean\"].min() - filtered_df_average[f\"{variable_name}_rcp85_stdev\"].max()\n",
    "        y_min = min(rcp45_min, rcp85_min) - 0.5\n",
    "        y_min = y_min // interval * interval\n",
    "\n",
    "        rcp45_max = filtered_df_average[f\"{variable_name}_rcp45_mean\"].max() + filtered_df_average[f\"{variable_name}_rcp45_stdev\"].max()\n",
    "        rcp85_max = filtered_df_average[f\"{variable_name}_rcp85_mean\"].max() + filtered_df_average[f\"{variable_name}_rcp85_stdev\"].max()\n",
    "        y_max = max(rcp45_max, rcp85_max) + 0.5\n",
    "        y_max = (y_max + interval) // interval * interval\n",
    "        \n",
    "        y_max_list.append(y_max)\n",
    "        y_min_list.append(y_min)\n",
    "\n",
    "    ax.set_ylim(min(y_min_list), max(y_max_list))\n",
    "    \n",
    "    # Adjust x-ticks for better readability\n",
    "    ax.set_xlim(filtered_df_average.index.min(), filtered_df_average.index.max())\n",
    "    ax.set_xticks(filtered_df_average.index[::5])\n",
    "    tick_positions = filtered_df_average.index[::5]\n",
    "    tick_labels = [str(pd.to_datetime(date).year) for date in tick_positions]\n",
    "    ax.set_xticks(ticks=tick_positions, labels=tick_labels, rotation=0)\n",
    "    \n",
    "    # Add gridlines\n",
    "    ax.grid(visible=True, color='#b0b0b0', linestyle='--', linewidth=0.8, alpha=0.6)\n",
    "    ax.yaxis.set_major_formatter(ticker.FormatStrFormatter('%0.2f'))\n",
    "\n",
    "    # Customize plot labels and title\n",
    "    ax.set_xlabel('Year', fontsize=14)\n",
    "    ax.set_ylabel('Temperature (°C)', fontsize=14, labelpad=10)\n",
    "    ax.set_title(\n",
    "        f\"Average {variable_name.split('_')[0]} temperature \\n(Comparing RCP 4.5 and RCP 8.5 Scenarios)\",\n",
    "        fontsize=14,\n",
    "        fontweight='bold'\n",
    "    )\n",
    "    \n",
    "    # Add description and source\n",
    "    plt.figtext(\n",
    "        0.5,\n",
    "        -0.075,\n",
    "        (\n",
    "            'Beschreibung: Durchschnittliche Lufttemperatur pro Jahr, die in einer Höhe von 2 m über der Oberfläche gilt.\\n'\n",
    "            'Source: Quelle: Hooyberghs, H., Berckmans, J., Lefebre, F., De Ridder, K. (2019):\\n'\n",
    "            'Temperature statistics for Europe derived from climate projection.\\n'\n",
    "            'Copernicus Climate Change Service (C3S) Climate Data Store (CDS).\\n'\n",
    "            'DOI: 10.24381/cds.8be2c014 (Accessed on 14-10-2024)'\n",
    "        ),\n",
    "        ha='left',\n",
    "        va='center',\n",
    "        fontsize=9,\n",
    "        wrap=True,\n",
    "        backgroundcolor='w',\n",
    "    )\n",
    "    \n",
    "    # Legend adjustments\n",
    "    ax.legend(loc='upper left', fontsize=10, frameon=True, title='Scenario', title_fontsize=11)\n",
    "    \n",
    "    # Adjust layout and display the plot\n",
    "    fig.tight_layout()\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6fe75d9b",
   "metadata": {},
   "outputs": [],
   "source": [
    "if __name__ == \"__main__\":\n",
    "    # Single dataset variable\n",
    "    plot_line_and_shade(filtered_df_average=filtered_df_average,\n",
    "                         variable_name_list=[f\"{nc_files[0]['ds_period']}_Tmax_mean\"])\n",
    "    plot_line_and_shade(filtered_df_average=filtered_df_average,\n",
    "                         variable_name_list=[f\"{nc_files[0]['ds_period']}_Tmean_mean\"])\n",
    "    plot_line_and_shade(filtered_df_average=filtered_df_average,\n",
    "                         variable_name_list=[f\"{nc_files[0]['ds_period']}_Tmin_mean\"])\n",
    "    # Multiple dataset variable\n",
    "    plot_line_and_shade(filtered_df_average=filtered_df_average,\n",
    "                         variable_name_list=[f\"{nc_files[0]['ds_period']}_Tmax_mean\", f\"{nc_files[0]['ds_period']}_Tmean_mean\", f\"{nc_files_sorted[0]['ds_period']}_Tmin_mean\"])\n",
    "    "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "myenv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.16"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {},
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
